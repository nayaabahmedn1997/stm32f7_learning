
UART_Practice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001218  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001418  08001418  00011418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800145c  0800145c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800145c  0800145c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800145c  0800145c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800145c  0800145c  0001145c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001460  08001460  00011460  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001464  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080014c0  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080014c0  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008a  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d93  00000000  00000000  000200cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004a1  00000000  00000000  00020e60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00021308  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000e4  00000000  00000000  00021458  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001ed00  00000000  00000000  0002153c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000019aa  00000000  00000000  0004023c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a87c6  00000000  00000000  00041be6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000bac  00000000  00000000  000ea3ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  000eaf58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	2000005c 	.word	0x2000005c
 800021c:	00000000 	.word	0x00000000
 8000220:	08001400 	.word	0x08001400

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20000060 	.word	0x20000060
 800023c:	08001400 	.word	0x08001400

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <main>:




int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b082      	sub	sp, #8
 80002e4:	af00      	add	r7, sp, #0
	uart2_tx_init();
 80002e6:	f000 f8cb 	bl	8000480 <uart2_tx_init>
	while (1)
	{
		printf("Hello world \n \r");
 80002ea:	480a      	ldr	r0, [pc, #40]	; (8000314 <main+0x34>)
 80002ec:	f000 fa16 	bl	800071c <iprintf>
		__io__putchar('a');
 80002f0:	2061      	movs	r0, #97	; 0x61
 80002f2:	f000 f8b7 	bl	8000464 <__io__putchar>
		for(int i=0;i<1000000;i++){}
 80002f6:	2300      	movs	r3, #0
 80002f8:	607b      	str	r3, [r7, #4]
 80002fa:	e002      	b.n	8000302 <main+0x22>
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	3301      	adds	r3, #1
 8000300:	607b      	str	r3, [r7, #4]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a04      	ldr	r2, [pc, #16]	; (8000318 <main+0x38>)
 8000306:	4293      	cmp	r3, r2
 8000308:	ddf8      	ble.n	80002fc <main+0x1c>
		__io__putchar('\n');
 800030a:	200a      	movs	r0, #10
 800030c:	f000 f8aa 	bl	8000464 <__io__putchar>
	{
 8000310:	e7eb      	b.n	80002ea <main+0xa>
 8000312:	bf00      	nop
 8000314:	08001418 	.word	0x08001418
 8000318:	000f423f 	.word	0x000f423f

0800031c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b086      	sub	sp, #24
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000328:	2300      	movs	r3, #0
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	e00a      	b.n	8000344 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800032e:	f3af 8000 	nop.w
 8000332:	4601      	mov	r1, r0
 8000334:	68bb      	ldr	r3, [r7, #8]
 8000336:	1c5a      	adds	r2, r3, #1
 8000338:	60ba      	str	r2, [r7, #8]
 800033a:	b2ca      	uxtb	r2, r1
 800033c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	3301      	adds	r3, #1
 8000342:	617b      	str	r3, [r7, #20]
 8000344:	697a      	ldr	r2, [r7, #20]
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	429a      	cmp	r2, r3
 800034a:	dbf0      	blt.n	800032e <_read+0x12>
  }

  return len;
 800034c:	687b      	ldr	r3, [r7, #4]
}
 800034e:	4618      	mov	r0, r3
 8000350:	3718      	adds	r7, #24
 8000352:	46bd      	mov	sp, r7
 8000354:	bd80      	pop	{r7, pc}

08000356 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000356:	b580      	push	{r7, lr}
 8000358:	b086      	sub	sp, #24
 800035a:	af00      	add	r7, sp, #0
 800035c:	60f8      	str	r0, [r7, #12]
 800035e:	60b9      	str	r1, [r7, #8]
 8000360:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000362:	2300      	movs	r3, #0
 8000364:	617b      	str	r3, [r7, #20]
 8000366:	e009      	b.n	800037c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000368:	68bb      	ldr	r3, [r7, #8]
 800036a:	1c5a      	adds	r2, r3, #1
 800036c:	60ba      	str	r2, [r7, #8]
 800036e:	781b      	ldrb	r3, [r3, #0]
 8000370:	4618      	mov	r0, r3
 8000372:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000376:	697b      	ldr	r3, [r7, #20]
 8000378:	3301      	adds	r3, #1
 800037a:	617b      	str	r3, [r7, #20]
 800037c:	697a      	ldr	r2, [r7, #20]
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	429a      	cmp	r2, r3
 8000382:	dbf1      	blt.n	8000368 <_write+0x12>
  }
  return len;
 8000384:	687b      	ldr	r3, [r7, #4]
}
 8000386:	4618      	mov	r0, r3
 8000388:	3718      	adds	r7, #24
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}

0800038e <_close>:

int _close(int file)
{
 800038e:	b480      	push	{r7}
 8000390:	b083      	sub	sp, #12
 8000392:	af00      	add	r7, sp, #0
 8000394:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000396:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800039a:	4618      	mov	r0, r3
 800039c:	370c      	adds	r7, #12
 800039e:	46bd      	mov	sp, r7
 80003a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a4:	4770      	bx	lr

080003a6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003a6:	b480      	push	{r7}
 80003a8:	b083      	sub	sp, #12
 80003aa:	af00      	add	r7, sp, #0
 80003ac:	6078      	str	r0, [r7, #4]
 80003ae:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003b0:	683b      	ldr	r3, [r7, #0]
 80003b2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003b6:	605a      	str	r2, [r3, #4]
  return 0;
 80003b8:	2300      	movs	r3, #0
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	370c      	adds	r7, #12
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr

080003c6 <_isatty>:

int _isatty(int file)
{
 80003c6:	b480      	push	{r7}
 80003c8:	b083      	sub	sp, #12
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003ce:	2301      	movs	r3, #1
}
 80003d0:	4618      	mov	r0, r3
 80003d2:	370c      	adds	r7, #12
 80003d4:	46bd      	mov	sp, r7
 80003d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003da:	4770      	bx	lr

080003dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003dc:	b480      	push	{r7}
 80003de:	b085      	sub	sp, #20
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	60f8      	str	r0, [r7, #12]
 80003e4:	60b9      	str	r1, [r7, #8]
 80003e6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003e8:	2300      	movs	r3, #0
}
 80003ea:	4618      	mov	r0, r3
 80003ec:	3714      	adds	r7, #20
 80003ee:	46bd      	mov	sp, r7
 80003f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f4:	4770      	bx	lr
	...

080003f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003f8:	b580      	push	{r7, lr}
 80003fa:	b086      	sub	sp, #24
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000400:	4a14      	ldr	r2, [pc, #80]	; (8000454 <_sbrk+0x5c>)
 8000402:	4b15      	ldr	r3, [pc, #84]	; (8000458 <_sbrk+0x60>)
 8000404:	1ad3      	subs	r3, r2, r3
 8000406:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800040c:	4b13      	ldr	r3, [pc, #76]	; (800045c <_sbrk+0x64>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	2b00      	cmp	r3, #0
 8000412:	d102      	bne.n	800041a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000414:	4b11      	ldr	r3, [pc, #68]	; (800045c <_sbrk+0x64>)
 8000416:	4a12      	ldr	r2, [pc, #72]	; (8000460 <_sbrk+0x68>)
 8000418:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041a:	4b10      	ldr	r3, [pc, #64]	; (800045c <_sbrk+0x64>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4413      	add	r3, r2
 8000422:	693a      	ldr	r2, [r7, #16]
 8000424:	429a      	cmp	r2, r3
 8000426:	d207      	bcs.n	8000438 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000428:	f000 f992 	bl	8000750 <__errno>
 800042c:	4603      	mov	r3, r0
 800042e:	220c      	movs	r2, #12
 8000430:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000432:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000436:	e009      	b.n	800044c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000438:	4b08      	ldr	r3, [pc, #32]	; (800045c <_sbrk+0x64>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800043e:	4b07      	ldr	r3, [pc, #28]	; (800045c <_sbrk+0x64>)
 8000440:	681a      	ldr	r2, [r3, #0]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4413      	add	r3, r2
 8000446:	4a05      	ldr	r2, [pc, #20]	; (800045c <_sbrk+0x64>)
 8000448:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044a:	68fb      	ldr	r3, [r7, #12]
}
 800044c:	4618      	mov	r0, r3
 800044e:	3718      	adds	r7, #24
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	20080000 	.word	0x20080000
 8000458:	00000400 	.word	0x00000400
 800045c:	20000078 	.word	0x20000078
 8000460:	200001c8 	.word	0x200001c8

08000464 <__io__putchar>:


#include "usart.h"

int __io__putchar(unsigned char ch)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b082      	sub	sp, #8
 8000468:	af00      	add	r7, sp, #0
 800046a:	4603      	mov	r3, r0
 800046c:	71fb      	strb	r3, [r7, #7]
	uart2_write(ch);
 800046e:	79fb      	ldrb	r3, [r7, #7]
 8000470:	4618      	mov	r0, r3
 8000472:	f000 f84f 	bl	8000514 <uart2_write>
	return ch;
 8000476:	79fb      	ldrb	r3, [r7, #7]
}
 8000478:	4618      	mov	r0, r3
 800047a:	3708      	adds	r7, #8
 800047c:	46bd      	mov	sp, r7
 800047e:	bd80      	pop	{r7, pc}

08000480 <uart2_tx_init>:

void uart2_tx_init(void)
{
 8000480:	b480      	push	{r7}
 8000482:	af00      	add	r7, sp, #0
	/////////////////-------------

	/*	Configure the UART GPIO pins */
	//	1. Enable clock access to GPIOA
	RCC->AHB1ENR |= GPIOD_EN;
 8000484:	4b20      	ldr	r3, [pc, #128]	; (8000508 <uart2_tx_init+0x88>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a1f      	ldr	r2, [pc, #124]	; (8000508 <uart2_tx_init+0x88>)
 800048a:	f043 0308 	orr.w	r3, r3, #8
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
	//	2. Set PD8 mode as alternate function
	GPIOD->MODER  &=~(1U<<16);
 8000490:	4b1e      	ldr	r3, [pc, #120]	; (800050c <uart2_tx_init+0x8c>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a1d      	ldr	r2, [pc, #116]	; (800050c <uart2_tx_init+0x8c>)
 8000496:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800049a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER  |= (1U<<17);
 800049c:	4b1b      	ldr	r3, [pc, #108]	; (800050c <uart2_tx_init+0x8c>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a1a      	ldr	r2, [pc, #104]	; (800050c <uart2_tx_init+0x8c>)
 80004a2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004a6:	6013      	str	r3, [r2, #0]
	//	3. Set PD8 alternate function type to UART_TX(AF7)
	GPIOD->AFR[1] |=(1U<<0);
 80004a8:	4b18      	ldr	r3, [pc, #96]	; (800050c <uart2_tx_init+0x8c>)
 80004aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004ac:	4a17      	ldr	r2, [pc, #92]	; (800050c <uart2_tx_init+0x8c>)
 80004ae:	f043 0301 	orr.w	r3, r3, #1
 80004b2:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |=(1U<<1);
 80004b4:	4b15      	ldr	r3, [pc, #84]	; (800050c <uart2_tx_init+0x8c>)
 80004b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004b8:	4a14      	ldr	r2, [pc, #80]	; (800050c <uart2_tx_init+0x8c>)
 80004ba:	f043 0302 	orr.w	r3, r3, #2
 80004be:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |=(1U<<2);
 80004c0:	4b12      	ldr	r3, [pc, #72]	; (800050c <uart2_tx_init+0x8c>)
 80004c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004c4:	4a11      	ldr	r2, [pc, #68]	; (800050c <uart2_tx_init+0x8c>)
 80004c6:	f043 0304 	orr.w	r3, r3, #4
 80004ca:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] &=~(1U<<3);
 80004cc:	4b0f      	ldr	r3, [pc, #60]	; (800050c <uart2_tx_init+0x8c>)
 80004ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004d0:	4a0e      	ldr	r2, [pc, #56]	; (800050c <uart2_tx_init+0x8c>)
 80004d2:	f023 0308 	bic.w	r3, r3, #8
 80004d6:	6253      	str	r3, [r2, #36]	; 0x24


	/*	Configure the USART module */
	//	1. Enable clock access to UART2
	RCC->APB1ENR |= USART3_EN;
 80004d8:	4b0b      	ldr	r3, [pc, #44]	; (8000508 <uart2_tx_init+0x88>)
 80004da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80004dc:	4a0a      	ldr	r2, [pc, #40]	; (8000508 <uart2_tx_init+0x88>)
 80004de:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80004e2:	6413      	str	r3, [r2, #64]	; 0x40
	//	2. Configure the buadrate
	USART3->BRR    = 0x008B;
 80004e4:	4b0a      	ldr	r3, [pc, #40]	; (8000510 <uart2_tx_init+0x90>)
 80004e6:	228b      	movs	r2, #139	; 0x8b
 80004e8:	60da      	str	r2, [r3, #12]
	//	3. Configure the transfer direction as Tx
	USART3->CR1 = CR1_TE;
 80004ea:	4b09      	ldr	r3, [pc, #36]	; (8000510 <uart2_tx_init+0x90>)
 80004ec:	2208      	movs	r2, #8
 80004ee:	601a      	str	r2, [r3, #0]
	//	4. Enable the UART module.
	USART3->CR1 |= USART_UE;
 80004f0:	4b07      	ldr	r3, [pc, #28]	; (8000510 <uart2_tx_init+0x90>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a06      	ldr	r2, [pc, #24]	; (8000510 <uart2_tx_init+0x90>)
 80004f6:	f043 0301 	orr.w	r3, r3, #1
 80004fa:	6013      	str	r3, [r2, #0]

}
 80004fc:	bf00      	nop
 80004fe:	46bd      	mov	sp, r7
 8000500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000504:	4770      	bx	lr
 8000506:	bf00      	nop
 8000508:	40023800 	.word	0x40023800
 800050c:	40020c00 	.word	0x40020c00
 8000510:	40004800 	.word	0x40004800

08000514 <uart2_write>:

void uart2_write(unsigned char x)
{
 8000514:	b480      	push	{r7}
 8000516:	b083      	sub	sp, #12
 8000518:	af00      	add	r7, sp, #0
 800051a:	4603      	mov	r3, r0
 800051c:	71fb      	strb	r3, [r7, #7]

	USART3->TDR =(x);
 800051e:	4a08      	ldr	r2, [pc, #32]	; (8000540 <uart2_write+0x2c>)
 8000520:	79fb      	ldrb	r3, [r7, #7]
 8000522:	6293      	str	r3, [r2, #40]	; 0x28
	while(!((USART3->ISR)&USART_ISR_TC)){;};
 8000524:	bf00      	nop
 8000526:	4b06      	ldr	r3, [pc, #24]	; (8000540 <uart2_write+0x2c>)
 8000528:	69db      	ldr	r3, [r3, #28]
 800052a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800052e:	2b00      	cmp	r3, #0
 8000530:	d0f9      	beq.n	8000526 <uart2_write+0x12>

}
 8000532:	bf00      	nop
 8000534:	bf00      	nop
 8000536:	370c      	adds	r7, #12
 8000538:	46bd      	mov	sp, r7
 800053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053e:	4770      	bx	lr
 8000540:	40004800 	.word	0x40004800

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 f8f3 	bl	800075c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff feb3 	bl	80002e0 <main>

0800057a <LoopForever>:

LoopForever:
  b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000588:	08001464 	.word	0x08001464
  ldr r2, =_sbss
 800058c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000590:	200001c8 	.word	0x200001c8

08000594 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC_IRQHandler>
	...

08000598 <std>:
 8000598:	2300      	movs	r3, #0
 800059a:	b510      	push	{r4, lr}
 800059c:	4604      	mov	r4, r0
 800059e:	e9c0 3300 	strd	r3, r3, [r0]
 80005a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005a6:	6083      	str	r3, [r0, #8]
 80005a8:	8181      	strh	r1, [r0, #12]
 80005aa:	6643      	str	r3, [r0, #100]	; 0x64
 80005ac:	81c2      	strh	r2, [r0, #14]
 80005ae:	6183      	str	r3, [r0, #24]
 80005b0:	4619      	mov	r1, r3
 80005b2:	2208      	movs	r2, #8
 80005b4:	305c      	adds	r0, #92	; 0x5c
 80005b6:	f000 f8c3 	bl	8000740 <memset>
 80005ba:	4b0d      	ldr	r3, [pc, #52]	; (80005f0 <std+0x58>)
 80005bc:	6263      	str	r3, [r4, #36]	; 0x24
 80005be:	4b0d      	ldr	r3, [pc, #52]	; (80005f4 <std+0x5c>)
 80005c0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005c2:	4b0d      	ldr	r3, [pc, #52]	; (80005f8 <std+0x60>)
 80005c4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005c6:	4b0d      	ldr	r3, [pc, #52]	; (80005fc <std+0x64>)
 80005c8:	6323      	str	r3, [r4, #48]	; 0x30
 80005ca:	4b0d      	ldr	r3, [pc, #52]	; (8000600 <std+0x68>)
 80005cc:	6224      	str	r4, [r4, #32]
 80005ce:	429c      	cmp	r4, r3
 80005d0:	d006      	beq.n	80005e0 <std+0x48>
 80005d2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005d6:	4294      	cmp	r4, r2
 80005d8:	d002      	beq.n	80005e0 <std+0x48>
 80005da:	33d0      	adds	r3, #208	; 0xd0
 80005dc:	429c      	cmp	r4, r3
 80005de:	d105      	bne.n	80005ec <std+0x54>
 80005e0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e8:	f000 b8dc 	b.w	80007a4 <__retarget_lock_init_recursive>
 80005ec:	bd10      	pop	{r4, pc}
 80005ee:	bf00      	nop
 80005f0:	08001005 	.word	0x08001005
 80005f4:	08001027 	.word	0x08001027
 80005f8:	0800105f 	.word	0x0800105f
 80005fc:	08001083 	.word	0x08001083
 8000600:	2000007c 	.word	0x2000007c

08000604 <stdio_exit_handler>:
 8000604:	4a02      	ldr	r2, [pc, #8]	; (8000610 <stdio_exit_handler+0xc>)
 8000606:	4903      	ldr	r1, [pc, #12]	; (8000614 <stdio_exit_handler+0x10>)
 8000608:	4803      	ldr	r0, [pc, #12]	; (8000618 <stdio_exit_handler+0x14>)
 800060a:	f000 b869 	b.w	80006e0 <_fwalk_sglue>
 800060e:	bf00      	nop
 8000610:	20000000 	.word	0x20000000
 8000614:	08000f9d 	.word	0x08000f9d
 8000618:	2000000c 	.word	0x2000000c

0800061c <cleanup_stdio>:
 800061c:	6841      	ldr	r1, [r0, #4]
 800061e:	4b0c      	ldr	r3, [pc, #48]	; (8000650 <cleanup_stdio+0x34>)
 8000620:	4299      	cmp	r1, r3
 8000622:	b510      	push	{r4, lr}
 8000624:	4604      	mov	r4, r0
 8000626:	d001      	beq.n	800062c <cleanup_stdio+0x10>
 8000628:	f000 fcb8 	bl	8000f9c <_fflush_r>
 800062c:	68a1      	ldr	r1, [r4, #8]
 800062e:	4b09      	ldr	r3, [pc, #36]	; (8000654 <cleanup_stdio+0x38>)
 8000630:	4299      	cmp	r1, r3
 8000632:	d002      	beq.n	800063a <cleanup_stdio+0x1e>
 8000634:	4620      	mov	r0, r4
 8000636:	f000 fcb1 	bl	8000f9c <_fflush_r>
 800063a:	68e1      	ldr	r1, [r4, #12]
 800063c:	4b06      	ldr	r3, [pc, #24]	; (8000658 <cleanup_stdio+0x3c>)
 800063e:	4299      	cmp	r1, r3
 8000640:	d004      	beq.n	800064c <cleanup_stdio+0x30>
 8000642:	4620      	mov	r0, r4
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	f000 bca8 	b.w	8000f9c <_fflush_r>
 800064c:	bd10      	pop	{r4, pc}
 800064e:	bf00      	nop
 8000650:	2000007c 	.word	0x2000007c
 8000654:	200000e4 	.word	0x200000e4
 8000658:	2000014c 	.word	0x2000014c

0800065c <global_stdio_init.part.0>:
 800065c:	b510      	push	{r4, lr}
 800065e:	4b0b      	ldr	r3, [pc, #44]	; (800068c <global_stdio_init.part.0+0x30>)
 8000660:	4c0b      	ldr	r4, [pc, #44]	; (8000690 <global_stdio_init.part.0+0x34>)
 8000662:	4a0c      	ldr	r2, [pc, #48]	; (8000694 <global_stdio_init.part.0+0x38>)
 8000664:	601a      	str	r2, [r3, #0]
 8000666:	4620      	mov	r0, r4
 8000668:	2200      	movs	r2, #0
 800066a:	2104      	movs	r1, #4
 800066c:	f7ff ff94 	bl	8000598 <std>
 8000670:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000674:	2201      	movs	r2, #1
 8000676:	2109      	movs	r1, #9
 8000678:	f7ff ff8e 	bl	8000598 <std>
 800067c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000680:	2202      	movs	r2, #2
 8000682:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000686:	2112      	movs	r1, #18
 8000688:	f7ff bf86 	b.w	8000598 <std>
 800068c:	200001b4 	.word	0x200001b4
 8000690:	2000007c 	.word	0x2000007c
 8000694:	08000605 	.word	0x08000605

08000698 <__sfp_lock_acquire>:
 8000698:	4801      	ldr	r0, [pc, #4]	; (80006a0 <__sfp_lock_acquire+0x8>)
 800069a:	f000 b884 	b.w	80007a6 <__retarget_lock_acquire_recursive>
 800069e:	bf00      	nop
 80006a0:	200001b9 	.word	0x200001b9

080006a4 <__sfp_lock_release>:
 80006a4:	4801      	ldr	r0, [pc, #4]	; (80006ac <__sfp_lock_release+0x8>)
 80006a6:	f000 b87f 	b.w	80007a8 <__retarget_lock_release_recursive>
 80006aa:	bf00      	nop
 80006ac:	200001b9 	.word	0x200001b9

080006b0 <__sinit>:
 80006b0:	b510      	push	{r4, lr}
 80006b2:	4604      	mov	r4, r0
 80006b4:	f7ff fff0 	bl	8000698 <__sfp_lock_acquire>
 80006b8:	6a23      	ldr	r3, [r4, #32]
 80006ba:	b11b      	cbz	r3, 80006c4 <__sinit+0x14>
 80006bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006c0:	f7ff bff0 	b.w	80006a4 <__sfp_lock_release>
 80006c4:	4b04      	ldr	r3, [pc, #16]	; (80006d8 <__sinit+0x28>)
 80006c6:	6223      	str	r3, [r4, #32]
 80006c8:	4b04      	ldr	r3, [pc, #16]	; (80006dc <__sinit+0x2c>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d1f5      	bne.n	80006bc <__sinit+0xc>
 80006d0:	f7ff ffc4 	bl	800065c <global_stdio_init.part.0>
 80006d4:	e7f2      	b.n	80006bc <__sinit+0xc>
 80006d6:	bf00      	nop
 80006d8:	0800061d 	.word	0x0800061d
 80006dc:	200001b4 	.word	0x200001b4

080006e0 <_fwalk_sglue>:
 80006e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006e4:	4607      	mov	r7, r0
 80006e6:	4688      	mov	r8, r1
 80006e8:	4614      	mov	r4, r2
 80006ea:	2600      	movs	r6, #0
 80006ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006f0:	f1b9 0901 	subs.w	r9, r9, #1
 80006f4:	d505      	bpl.n	8000702 <_fwalk_sglue+0x22>
 80006f6:	6824      	ldr	r4, [r4, #0]
 80006f8:	2c00      	cmp	r4, #0
 80006fa:	d1f7      	bne.n	80006ec <_fwalk_sglue+0xc>
 80006fc:	4630      	mov	r0, r6
 80006fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000702:	89ab      	ldrh	r3, [r5, #12]
 8000704:	2b01      	cmp	r3, #1
 8000706:	d907      	bls.n	8000718 <_fwalk_sglue+0x38>
 8000708:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800070c:	3301      	adds	r3, #1
 800070e:	d003      	beq.n	8000718 <_fwalk_sglue+0x38>
 8000710:	4629      	mov	r1, r5
 8000712:	4638      	mov	r0, r7
 8000714:	47c0      	blx	r8
 8000716:	4306      	orrs	r6, r0
 8000718:	3568      	adds	r5, #104	; 0x68
 800071a:	e7e9      	b.n	80006f0 <_fwalk_sglue+0x10>

0800071c <iprintf>:
 800071c:	b40f      	push	{r0, r1, r2, r3}
 800071e:	b507      	push	{r0, r1, r2, lr}
 8000720:	4906      	ldr	r1, [pc, #24]	; (800073c <iprintf+0x20>)
 8000722:	ab04      	add	r3, sp, #16
 8000724:	6808      	ldr	r0, [r1, #0]
 8000726:	f853 2b04 	ldr.w	r2, [r3], #4
 800072a:	6881      	ldr	r1, [r0, #8]
 800072c:	9301      	str	r3, [sp, #4]
 800072e:	f000 f865 	bl	80007fc <_vfiprintf_r>
 8000732:	b003      	add	sp, #12
 8000734:	f85d eb04 	ldr.w	lr, [sp], #4
 8000738:	b004      	add	sp, #16
 800073a:	4770      	bx	lr
 800073c:	20000058 	.word	0x20000058

08000740 <memset>:
 8000740:	4402      	add	r2, r0
 8000742:	4603      	mov	r3, r0
 8000744:	4293      	cmp	r3, r2
 8000746:	d100      	bne.n	800074a <memset+0xa>
 8000748:	4770      	bx	lr
 800074a:	f803 1b01 	strb.w	r1, [r3], #1
 800074e:	e7f9      	b.n	8000744 <memset+0x4>

08000750 <__errno>:
 8000750:	4b01      	ldr	r3, [pc, #4]	; (8000758 <__errno+0x8>)
 8000752:	6818      	ldr	r0, [r3, #0]
 8000754:	4770      	bx	lr
 8000756:	bf00      	nop
 8000758:	20000058 	.word	0x20000058

0800075c <__libc_init_array>:
 800075c:	b570      	push	{r4, r5, r6, lr}
 800075e:	4d0d      	ldr	r5, [pc, #52]	; (8000794 <__libc_init_array+0x38>)
 8000760:	4c0d      	ldr	r4, [pc, #52]	; (8000798 <__libc_init_array+0x3c>)
 8000762:	1b64      	subs	r4, r4, r5
 8000764:	10a4      	asrs	r4, r4, #2
 8000766:	2600      	movs	r6, #0
 8000768:	42a6      	cmp	r6, r4
 800076a:	d109      	bne.n	8000780 <__libc_init_array+0x24>
 800076c:	4d0b      	ldr	r5, [pc, #44]	; (800079c <__libc_init_array+0x40>)
 800076e:	4c0c      	ldr	r4, [pc, #48]	; (80007a0 <__libc_init_array+0x44>)
 8000770:	f000 fe46 	bl	8001400 <_init>
 8000774:	1b64      	subs	r4, r4, r5
 8000776:	10a4      	asrs	r4, r4, #2
 8000778:	2600      	movs	r6, #0
 800077a:	42a6      	cmp	r6, r4
 800077c:	d105      	bne.n	800078a <__libc_init_array+0x2e>
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f855 3b04 	ldr.w	r3, [r5], #4
 8000784:	4798      	blx	r3
 8000786:	3601      	adds	r6, #1
 8000788:	e7ee      	b.n	8000768 <__libc_init_array+0xc>
 800078a:	f855 3b04 	ldr.w	r3, [r5], #4
 800078e:	4798      	blx	r3
 8000790:	3601      	adds	r6, #1
 8000792:	e7f2      	b.n	800077a <__libc_init_array+0x1e>
 8000794:	0800145c 	.word	0x0800145c
 8000798:	0800145c 	.word	0x0800145c
 800079c:	0800145c 	.word	0x0800145c
 80007a0:	08001460 	.word	0x08001460

080007a4 <__retarget_lock_init_recursive>:
 80007a4:	4770      	bx	lr

080007a6 <__retarget_lock_acquire_recursive>:
 80007a6:	4770      	bx	lr

080007a8 <__retarget_lock_release_recursive>:
 80007a8:	4770      	bx	lr

080007aa <__sfputc_r>:
 80007aa:	6893      	ldr	r3, [r2, #8]
 80007ac:	3b01      	subs	r3, #1
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	b410      	push	{r4}
 80007b2:	6093      	str	r3, [r2, #8]
 80007b4:	da08      	bge.n	80007c8 <__sfputc_r+0x1e>
 80007b6:	6994      	ldr	r4, [r2, #24]
 80007b8:	42a3      	cmp	r3, r4
 80007ba:	db01      	blt.n	80007c0 <__sfputc_r+0x16>
 80007bc:	290a      	cmp	r1, #10
 80007be:	d103      	bne.n	80007c8 <__sfputc_r+0x1e>
 80007c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007c4:	f000 bc61 	b.w	800108a <__swbuf_r>
 80007c8:	6813      	ldr	r3, [r2, #0]
 80007ca:	1c58      	adds	r0, r3, #1
 80007cc:	6010      	str	r0, [r2, #0]
 80007ce:	7019      	strb	r1, [r3, #0]
 80007d0:	4608      	mov	r0, r1
 80007d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007d6:	4770      	bx	lr

080007d8 <__sfputs_r>:
 80007d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007da:	4606      	mov	r6, r0
 80007dc:	460f      	mov	r7, r1
 80007de:	4614      	mov	r4, r2
 80007e0:	18d5      	adds	r5, r2, r3
 80007e2:	42ac      	cmp	r4, r5
 80007e4:	d101      	bne.n	80007ea <__sfputs_r+0x12>
 80007e6:	2000      	movs	r0, #0
 80007e8:	e007      	b.n	80007fa <__sfputs_r+0x22>
 80007ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007ee:	463a      	mov	r2, r7
 80007f0:	4630      	mov	r0, r6
 80007f2:	f7ff ffda 	bl	80007aa <__sfputc_r>
 80007f6:	1c43      	adds	r3, r0, #1
 80007f8:	d1f3      	bne.n	80007e2 <__sfputs_r+0xa>
 80007fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080007fc <_vfiprintf_r>:
 80007fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000800:	460d      	mov	r5, r1
 8000802:	b09d      	sub	sp, #116	; 0x74
 8000804:	4614      	mov	r4, r2
 8000806:	4698      	mov	r8, r3
 8000808:	4606      	mov	r6, r0
 800080a:	b118      	cbz	r0, 8000814 <_vfiprintf_r+0x18>
 800080c:	6a03      	ldr	r3, [r0, #32]
 800080e:	b90b      	cbnz	r3, 8000814 <_vfiprintf_r+0x18>
 8000810:	f7ff ff4e 	bl	80006b0 <__sinit>
 8000814:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000816:	07d9      	lsls	r1, r3, #31
 8000818:	d405      	bmi.n	8000826 <_vfiprintf_r+0x2a>
 800081a:	89ab      	ldrh	r3, [r5, #12]
 800081c:	059a      	lsls	r2, r3, #22
 800081e:	d402      	bmi.n	8000826 <_vfiprintf_r+0x2a>
 8000820:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000822:	f7ff ffc0 	bl	80007a6 <__retarget_lock_acquire_recursive>
 8000826:	89ab      	ldrh	r3, [r5, #12]
 8000828:	071b      	lsls	r3, r3, #28
 800082a:	d501      	bpl.n	8000830 <_vfiprintf_r+0x34>
 800082c:	692b      	ldr	r3, [r5, #16]
 800082e:	b99b      	cbnz	r3, 8000858 <_vfiprintf_r+0x5c>
 8000830:	4629      	mov	r1, r5
 8000832:	4630      	mov	r0, r6
 8000834:	f000 fc66 	bl	8001104 <__swsetup_r>
 8000838:	b170      	cbz	r0, 8000858 <_vfiprintf_r+0x5c>
 800083a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800083c:	07dc      	lsls	r4, r3, #31
 800083e:	d504      	bpl.n	800084a <_vfiprintf_r+0x4e>
 8000840:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000844:	b01d      	add	sp, #116	; 0x74
 8000846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800084a:	89ab      	ldrh	r3, [r5, #12]
 800084c:	0598      	lsls	r0, r3, #22
 800084e:	d4f7      	bmi.n	8000840 <_vfiprintf_r+0x44>
 8000850:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000852:	f7ff ffa9 	bl	80007a8 <__retarget_lock_release_recursive>
 8000856:	e7f3      	b.n	8000840 <_vfiprintf_r+0x44>
 8000858:	2300      	movs	r3, #0
 800085a:	9309      	str	r3, [sp, #36]	; 0x24
 800085c:	2320      	movs	r3, #32
 800085e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000862:	f8cd 800c 	str.w	r8, [sp, #12]
 8000866:	2330      	movs	r3, #48	; 0x30
 8000868:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000a1c <_vfiprintf_r+0x220>
 800086c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000870:	f04f 0901 	mov.w	r9, #1
 8000874:	4623      	mov	r3, r4
 8000876:	469a      	mov	sl, r3
 8000878:	f813 2b01 	ldrb.w	r2, [r3], #1
 800087c:	b10a      	cbz	r2, 8000882 <_vfiprintf_r+0x86>
 800087e:	2a25      	cmp	r2, #37	; 0x25
 8000880:	d1f9      	bne.n	8000876 <_vfiprintf_r+0x7a>
 8000882:	ebba 0b04 	subs.w	fp, sl, r4
 8000886:	d00b      	beq.n	80008a0 <_vfiprintf_r+0xa4>
 8000888:	465b      	mov	r3, fp
 800088a:	4622      	mov	r2, r4
 800088c:	4629      	mov	r1, r5
 800088e:	4630      	mov	r0, r6
 8000890:	f7ff ffa2 	bl	80007d8 <__sfputs_r>
 8000894:	3001      	adds	r0, #1
 8000896:	f000 80a9 	beq.w	80009ec <_vfiprintf_r+0x1f0>
 800089a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800089c:	445a      	add	r2, fp
 800089e:	9209      	str	r2, [sp, #36]	; 0x24
 80008a0:	f89a 3000 	ldrb.w	r3, [sl]
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	f000 80a1 	beq.w	80009ec <_vfiprintf_r+0x1f0>
 80008aa:	2300      	movs	r3, #0
 80008ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80008b0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80008b4:	f10a 0a01 	add.w	sl, sl, #1
 80008b8:	9304      	str	r3, [sp, #16]
 80008ba:	9307      	str	r3, [sp, #28]
 80008bc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80008c0:	931a      	str	r3, [sp, #104]	; 0x68
 80008c2:	4654      	mov	r4, sl
 80008c4:	2205      	movs	r2, #5
 80008c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008ca:	4854      	ldr	r0, [pc, #336]	; (8000a1c <_vfiprintf_r+0x220>)
 80008cc:	f7ff fcb8 	bl	8000240 <memchr>
 80008d0:	9a04      	ldr	r2, [sp, #16]
 80008d2:	b9d8      	cbnz	r0, 800090c <_vfiprintf_r+0x110>
 80008d4:	06d1      	lsls	r1, r2, #27
 80008d6:	bf44      	itt	mi
 80008d8:	2320      	movmi	r3, #32
 80008da:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80008de:	0713      	lsls	r3, r2, #28
 80008e0:	bf44      	itt	mi
 80008e2:	232b      	movmi	r3, #43	; 0x2b
 80008e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80008e8:	f89a 3000 	ldrb.w	r3, [sl]
 80008ec:	2b2a      	cmp	r3, #42	; 0x2a
 80008ee:	d015      	beq.n	800091c <_vfiprintf_r+0x120>
 80008f0:	9a07      	ldr	r2, [sp, #28]
 80008f2:	4654      	mov	r4, sl
 80008f4:	2000      	movs	r0, #0
 80008f6:	f04f 0c0a 	mov.w	ip, #10
 80008fa:	4621      	mov	r1, r4
 80008fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000900:	3b30      	subs	r3, #48	; 0x30
 8000902:	2b09      	cmp	r3, #9
 8000904:	d94d      	bls.n	80009a2 <_vfiprintf_r+0x1a6>
 8000906:	b1b0      	cbz	r0, 8000936 <_vfiprintf_r+0x13a>
 8000908:	9207      	str	r2, [sp, #28]
 800090a:	e014      	b.n	8000936 <_vfiprintf_r+0x13a>
 800090c:	eba0 0308 	sub.w	r3, r0, r8
 8000910:	fa09 f303 	lsl.w	r3, r9, r3
 8000914:	4313      	orrs	r3, r2
 8000916:	9304      	str	r3, [sp, #16]
 8000918:	46a2      	mov	sl, r4
 800091a:	e7d2      	b.n	80008c2 <_vfiprintf_r+0xc6>
 800091c:	9b03      	ldr	r3, [sp, #12]
 800091e:	1d19      	adds	r1, r3, #4
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	9103      	str	r1, [sp, #12]
 8000924:	2b00      	cmp	r3, #0
 8000926:	bfbb      	ittet	lt
 8000928:	425b      	neglt	r3, r3
 800092a:	f042 0202 	orrlt.w	r2, r2, #2
 800092e:	9307      	strge	r3, [sp, #28]
 8000930:	9307      	strlt	r3, [sp, #28]
 8000932:	bfb8      	it	lt
 8000934:	9204      	strlt	r2, [sp, #16]
 8000936:	7823      	ldrb	r3, [r4, #0]
 8000938:	2b2e      	cmp	r3, #46	; 0x2e
 800093a:	d10c      	bne.n	8000956 <_vfiprintf_r+0x15a>
 800093c:	7863      	ldrb	r3, [r4, #1]
 800093e:	2b2a      	cmp	r3, #42	; 0x2a
 8000940:	d134      	bne.n	80009ac <_vfiprintf_r+0x1b0>
 8000942:	9b03      	ldr	r3, [sp, #12]
 8000944:	1d1a      	adds	r2, r3, #4
 8000946:	681b      	ldr	r3, [r3, #0]
 8000948:	9203      	str	r2, [sp, #12]
 800094a:	2b00      	cmp	r3, #0
 800094c:	bfb8      	it	lt
 800094e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000952:	3402      	adds	r4, #2
 8000954:	9305      	str	r3, [sp, #20]
 8000956:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000a2c <_vfiprintf_r+0x230>
 800095a:	7821      	ldrb	r1, [r4, #0]
 800095c:	2203      	movs	r2, #3
 800095e:	4650      	mov	r0, sl
 8000960:	f7ff fc6e 	bl	8000240 <memchr>
 8000964:	b138      	cbz	r0, 8000976 <_vfiprintf_r+0x17a>
 8000966:	9b04      	ldr	r3, [sp, #16]
 8000968:	eba0 000a 	sub.w	r0, r0, sl
 800096c:	2240      	movs	r2, #64	; 0x40
 800096e:	4082      	lsls	r2, r0
 8000970:	4313      	orrs	r3, r2
 8000972:	3401      	adds	r4, #1
 8000974:	9304      	str	r3, [sp, #16]
 8000976:	f814 1b01 	ldrb.w	r1, [r4], #1
 800097a:	4829      	ldr	r0, [pc, #164]	; (8000a20 <_vfiprintf_r+0x224>)
 800097c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000980:	2206      	movs	r2, #6
 8000982:	f7ff fc5d 	bl	8000240 <memchr>
 8000986:	2800      	cmp	r0, #0
 8000988:	d03f      	beq.n	8000a0a <_vfiprintf_r+0x20e>
 800098a:	4b26      	ldr	r3, [pc, #152]	; (8000a24 <_vfiprintf_r+0x228>)
 800098c:	bb1b      	cbnz	r3, 80009d6 <_vfiprintf_r+0x1da>
 800098e:	9b03      	ldr	r3, [sp, #12]
 8000990:	3307      	adds	r3, #7
 8000992:	f023 0307 	bic.w	r3, r3, #7
 8000996:	3308      	adds	r3, #8
 8000998:	9303      	str	r3, [sp, #12]
 800099a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800099c:	443b      	add	r3, r7
 800099e:	9309      	str	r3, [sp, #36]	; 0x24
 80009a0:	e768      	b.n	8000874 <_vfiprintf_r+0x78>
 80009a2:	fb0c 3202 	mla	r2, ip, r2, r3
 80009a6:	460c      	mov	r4, r1
 80009a8:	2001      	movs	r0, #1
 80009aa:	e7a6      	b.n	80008fa <_vfiprintf_r+0xfe>
 80009ac:	2300      	movs	r3, #0
 80009ae:	3401      	adds	r4, #1
 80009b0:	9305      	str	r3, [sp, #20]
 80009b2:	4619      	mov	r1, r3
 80009b4:	f04f 0c0a 	mov.w	ip, #10
 80009b8:	4620      	mov	r0, r4
 80009ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 80009be:	3a30      	subs	r2, #48	; 0x30
 80009c0:	2a09      	cmp	r2, #9
 80009c2:	d903      	bls.n	80009cc <_vfiprintf_r+0x1d0>
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	d0c6      	beq.n	8000956 <_vfiprintf_r+0x15a>
 80009c8:	9105      	str	r1, [sp, #20]
 80009ca:	e7c4      	b.n	8000956 <_vfiprintf_r+0x15a>
 80009cc:	fb0c 2101 	mla	r1, ip, r1, r2
 80009d0:	4604      	mov	r4, r0
 80009d2:	2301      	movs	r3, #1
 80009d4:	e7f0      	b.n	80009b8 <_vfiprintf_r+0x1bc>
 80009d6:	ab03      	add	r3, sp, #12
 80009d8:	9300      	str	r3, [sp, #0]
 80009da:	462a      	mov	r2, r5
 80009dc:	4b12      	ldr	r3, [pc, #72]	; (8000a28 <_vfiprintf_r+0x22c>)
 80009de:	a904      	add	r1, sp, #16
 80009e0:	4630      	mov	r0, r6
 80009e2:	f3af 8000 	nop.w
 80009e6:	4607      	mov	r7, r0
 80009e8:	1c78      	adds	r0, r7, #1
 80009ea:	d1d6      	bne.n	800099a <_vfiprintf_r+0x19e>
 80009ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ee:	07d9      	lsls	r1, r3, #31
 80009f0:	d405      	bmi.n	80009fe <_vfiprintf_r+0x202>
 80009f2:	89ab      	ldrh	r3, [r5, #12]
 80009f4:	059a      	lsls	r2, r3, #22
 80009f6:	d402      	bmi.n	80009fe <_vfiprintf_r+0x202>
 80009f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009fa:	f7ff fed5 	bl	80007a8 <__retarget_lock_release_recursive>
 80009fe:	89ab      	ldrh	r3, [r5, #12]
 8000a00:	065b      	lsls	r3, r3, #25
 8000a02:	f53f af1d 	bmi.w	8000840 <_vfiprintf_r+0x44>
 8000a06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a08:	e71c      	b.n	8000844 <_vfiprintf_r+0x48>
 8000a0a:	ab03      	add	r3, sp, #12
 8000a0c:	9300      	str	r3, [sp, #0]
 8000a0e:	462a      	mov	r2, r5
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_vfiprintf_r+0x22c>)
 8000a12:	a904      	add	r1, sp, #16
 8000a14:	4630      	mov	r0, r6
 8000a16:	f000 f919 	bl	8000c4c <_printf_i>
 8000a1a:	e7e4      	b.n	80009e6 <_vfiprintf_r+0x1ea>
 8000a1c:	08001428 	.word	0x08001428
 8000a20:	08001432 	.word	0x08001432
 8000a24:	00000000 	.word	0x00000000
 8000a28:	080007d9 	.word	0x080007d9
 8000a2c:	0800142e 	.word	0x0800142e

08000a30 <sbrk_aligned>:
 8000a30:	b570      	push	{r4, r5, r6, lr}
 8000a32:	4e0e      	ldr	r6, [pc, #56]	; (8000a6c <sbrk_aligned+0x3c>)
 8000a34:	460c      	mov	r4, r1
 8000a36:	6831      	ldr	r1, [r6, #0]
 8000a38:	4605      	mov	r5, r0
 8000a3a:	b911      	cbnz	r1, 8000a42 <sbrk_aligned+0x12>
 8000a3c:	f000 fc72 	bl	8001324 <_sbrk_r>
 8000a40:	6030      	str	r0, [r6, #0]
 8000a42:	4621      	mov	r1, r4
 8000a44:	4628      	mov	r0, r5
 8000a46:	f000 fc6d 	bl	8001324 <_sbrk_r>
 8000a4a:	1c43      	adds	r3, r0, #1
 8000a4c:	d00a      	beq.n	8000a64 <sbrk_aligned+0x34>
 8000a4e:	1cc4      	adds	r4, r0, #3
 8000a50:	f024 0403 	bic.w	r4, r4, #3
 8000a54:	42a0      	cmp	r0, r4
 8000a56:	d007      	beq.n	8000a68 <sbrk_aligned+0x38>
 8000a58:	1a21      	subs	r1, r4, r0
 8000a5a:	4628      	mov	r0, r5
 8000a5c:	f000 fc62 	bl	8001324 <_sbrk_r>
 8000a60:	3001      	adds	r0, #1
 8000a62:	d101      	bne.n	8000a68 <sbrk_aligned+0x38>
 8000a64:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000a68:	4620      	mov	r0, r4
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	200001c0 	.word	0x200001c0

08000a70 <_malloc_r>:
 8000a70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a74:	1ccd      	adds	r5, r1, #3
 8000a76:	f025 0503 	bic.w	r5, r5, #3
 8000a7a:	3508      	adds	r5, #8
 8000a7c:	2d0c      	cmp	r5, #12
 8000a7e:	bf38      	it	cc
 8000a80:	250c      	movcc	r5, #12
 8000a82:	2d00      	cmp	r5, #0
 8000a84:	4607      	mov	r7, r0
 8000a86:	db01      	blt.n	8000a8c <_malloc_r+0x1c>
 8000a88:	42a9      	cmp	r1, r5
 8000a8a:	d905      	bls.n	8000a98 <_malloc_r+0x28>
 8000a8c:	230c      	movs	r3, #12
 8000a8e:	603b      	str	r3, [r7, #0]
 8000a90:	2600      	movs	r6, #0
 8000a92:	4630      	mov	r0, r6
 8000a94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a98:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000b6c <_malloc_r+0xfc>
 8000a9c:	f000 faa6 	bl	8000fec <__malloc_lock>
 8000aa0:	f8d8 3000 	ldr.w	r3, [r8]
 8000aa4:	461c      	mov	r4, r3
 8000aa6:	bb5c      	cbnz	r4, 8000b00 <_malloc_r+0x90>
 8000aa8:	4629      	mov	r1, r5
 8000aaa:	4638      	mov	r0, r7
 8000aac:	f7ff ffc0 	bl	8000a30 <sbrk_aligned>
 8000ab0:	1c43      	adds	r3, r0, #1
 8000ab2:	4604      	mov	r4, r0
 8000ab4:	d155      	bne.n	8000b62 <_malloc_r+0xf2>
 8000ab6:	f8d8 4000 	ldr.w	r4, [r8]
 8000aba:	4626      	mov	r6, r4
 8000abc:	2e00      	cmp	r6, #0
 8000abe:	d145      	bne.n	8000b4c <_malloc_r+0xdc>
 8000ac0:	2c00      	cmp	r4, #0
 8000ac2:	d048      	beq.n	8000b56 <_malloc_r+0xe6>
 8000ac4:	6823      	ldr	r3, [r4, #0]
 8000ac6:	4631      	mov	r1, r6
 8000ac8:	4638      	mov	r0, r7
 8000aca:	eb04 0903 	add.w	r9, r4, r3
 8000ace:	f000 fc29 	bl	8001324 <_sbrk_r>
 8000ad2:	4581      	cmp	r9, r0
 8000ad4:	d13f      	bne.n	8000b56 <_malloc_r+0xe6>
 8000ad6:	6821      	ldr	r1, [r4, #0]
 8000ad8:	1a6d      	subs	r5, r5, r1
 8000ada:	4629      	mov	r1, r5
 8000adc:	4638      	mov	r0, r7
 8000ade:	f7ff ffa7 	bl	8000a30 <sbrk_aligned>
 8000ae2:	3001      	adds	r0, #1
 8000ae4:	d037      	beq.n	8000b56 <_malloc_r+0xe6>
 8000ae6:	6823      	ldr	r3, [r4, #0]
 8000ae8:	442b      	add	r3, r5
 8000aea:	6023      	str	r3, [r4, #0]
 8000aec:	f8d8 3000 	ldr.w	r3, [r8]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d038      	beq.n	8000b66 <_malloc_r+0xf6>
 8000af4:	685a      	ldr	r2, [r3, #4]
 8000af6:	42a2      	cmp	r2, r4
 8000af8:	d12b      	bne.n	8000b52 <_malloc_r+0xe2>
 8000afa:	2200      	movs	r2, #0
 8000afc:	605a      	str	r2, [r3, #4]
 8000afe:	e00f      	b.n	8000b20 <_malloc_r+0xb0>
 8000b00:	6822      	ldr	r2, [r4, #0]
 8000b02:	1b52      	subs	r2, r2, r5
 8000b04:	d41f      	bmi.n	8000b46 <_malloc_r+0xd6>
 8000b06:	2a0b      	cmp	r2, #11
 8000b08:	d917      	bls.n	8000b3a <_malloc_r+0xca>
 8000b0a:	1961      	adds	r1, r4, r5
 8000b0c:	42a3      	cmp	r3, r4
 8000b0e:	6025      	str	r5, [r4, #0]
 8000b10:	bf18      	it	ne
 8000b12:	6059      	strne	r1, [r3, #4]
 8000b14:	6863      	ldr	r3, [r4, #4]
 8000b16:	bf08      	it	eq
 8000b18:	f8c8 1000 	streq.w	r1, [r8]
 8000b1c:	5162      	str	r2, [r4, r5]
 8000b1e:	604b      	str	r3, [r1, #4]
 8000b20:	4638      	mov	r0, r7
 8000b22:	f104 060b 	add.w	r6, r4, #11
 8000b26:	f000 fa67 	bl	8000ff8 <__malloc_unlock>
 8000b2a:	f026 0607 	bic.w	r6, r6, #7
 8000b2e:	1d23      	adds	r3, r4, #4
 8000b30:	1af2      	subs	r2, r6, r3
 8000b32:	d0ae      	beq.n	8000a92 <_malloc_r+0x22>
 8000b34:	1b9b      	subs	r3, r3, r6
 8000b36:	50a3      	str	r3, [r4, r2]
 8000b38:	e7ab      	b.n	8000a92 <_malloc_r+0x22>
 8000b3a:	42a3      	cmp	r3, r4
 8000b3c:	6862      	ldr	r2, [r4, #4]
 8000b3e:	d1dd      	bne.n	8000afc <_malloc_r+0x8c>
 8000b40:	f8c8 2000 	str.w	r2, [r8]
 8000b44:	e7ec      	b.n	8000b20 <_malloc_r+0xb0>
 8000b46:	4623      	mov	r3, r4
 8000b48:	6864      	ldr	r4, [r4, #4]
 8000b4a:	e7ac      	b.n	8000aa6 <_malloc_r+0x36>
 8000b4c:	4634      	mov	r4, r6
 8000b4e:	6876      	ldr	r6, [r6, #4]
 8000b50:	e7b4      	b.n	8000abc <_malloc_r+0x4c>
 8000b52:	4613      	mov	r3, r2
 8000b54:	e7cc      	b.n	8000af0 <_malloc_r+0x80>
 8000b56:	230c      	movs	r3, #12
 8000b58:	603b      	str	r3, [r7, #0]
 8000b5a:	4638      	mov	r0, r7
 8000b5c:	f000 fa4c 	bl	8000ff8 <__malloc_unlock>
 8000b60:	e797      	b.n	8000a92 <_malloc_r+0x22>
 8000b62:	6025      	str	r5, [r4, #0]
 8000b64:	e7dc      	b.n	8000b20 <_malloc_r+0xb0>
 8000b66:	605b      	str	r3, [r3, #4]
 8000b68:	deff      	udf	#255	; 0xff
 8000b6a:	bf00      	nop
 8000b6c:	200001bc 	.word	0x200001bc

08000b70 <_printf_common>:
 8000b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b74:	4616      	mov	r6, r2
 8000b76:	4699      	mov	r9, r3
 8000b78:	688a      	ldr	r2, [r1, #8]
 8000b7a:	690b      	ldr	r3, [r1, #16]
 8000b7c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b80:	4293      	cmp	r3, r2
 8000b82:	bfb8      	it	lt
 8000b84:	4613      	movlt	r3, r2
 8000b86:	6033      	str	r3, [r6, #0]
 8000b88:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b8c:	4607      	mov	r7, r0
 8000b8e:	460c      	mov	r4, r1
 8000b90:	b10a      	cbz	r2, 8000b96 <_printf_common+0x26>
 8000b92:	3301      	adds	r3, #1
 8000b94:	6033      	str	r3, [r6, #0]
 8000b96:	6823      	ldr	r3, [r4, #0]
 8000b98:	0699      	lsls	r1, r3, #26
 8000b9a:	bf42      	ittt	mi
 8000b9c:	6833      	ldrmi	r3, [r6, #0]
 8000b9e:	3302      	addmi	r3, #2
 8000ba0:	6033      	strmi	r3, [r6, #0]
 8000ba2:	6825      	ldr	r5, [r4, #0]
 8000ba4:	f015 0506 	ands.w	r5, r5, #6
 8000ba8:	d106      	bne.n	8000bb8 <_printf_common+0x48>
 8000baa:	f104 0a19 	add.w	sl, r4, #25
 8000bae:	68e3      	ldr	r3, [r4, #12]
 8000bb0:	6832      	ldr	r2, [r6, #0]
 8000bb2:	1a9b      	subs	r3, r3, r2
 8000bb4:	42ab      	cmp	r3, r5
 8000bb6:	dc26      	bgt.n	8000c06 <_printf_common+0x96>
 8000bb8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bbc:	1e13      	subs	r3, r2, #0
 8000bbe:	6822      	ldr	r2, [r4, #0]
 8000bc0:	bf18      	it	ne
 8000bc2:	2301      	movne	r3, #1
 8000bc4:	0692      	lsls	r2, r2, #26
 8000bc6:	d42b      	bmi.n	8000c20 <_printf_common+0xb0>
 8000bc8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bcc:	4649      	mov	r1, r9
 8000bce:	4638      	mov	r0, r7
 8000bd0:	47c0      	blx	r8
 8000bd2:	3001      	adds	r0, #1
 8000bd4:	d01e      	beq.n	8000c14 <_printf_common+0xa4>
 8000bd6:	6823      	ldr	r3, [r4, #0]
 8000bd8:	6922      	ldr	r2, [r4, #16]
 8000bda:	f003 0306 	and.w	r3, r3, #6
 8000bde:	2b04      	cmp	r3, #4
 8000be0:	bf02      	ittt	eq
 8000be2:	68e5      	ldreq	r5, [r4, #12]
 8000be4:	6833      	ldreq	r3, [r6, #0]
 8000be6:	1aed      	subeq	r5, r5, r3
 8000be8:	68a3      	ldr	r3, [r4, #8]
 8000bea:	bf0c      	ite	eq
 8000bec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bf0:	2500      	movne	r5, #0
 8000bf2:	4293      	cmp	r3, r2
 8000bf4:	bfc4      	itt	gt
 8000bf6:	1a9b      	subgt	r3, r3, r2
 8000bf8:	18ed      	addgt	r5, r5, r3
 8000bfa:	2600      	movs	r6, #0
 8000bfc:	341a      	adds	r4, #26
 8000bfe:	42b5      	cmp	r5, r6
 8000c00:	d11a      	bne.n	8000c38 <_printf_common+0xc8>
 8000c02:	2000      	movs	r0, #0
 8000c04:	e008      	b.n	8000c18 <_printf_common+0xa8>
 8000c06:	2301      	movs	r3, #1
 8000c08:	4652      	mov	r2, sl
 8000c0a:	4649      	mov	r1, r9
 8000c0c:	4638      	mov	r0, r7
 8000c0e:	47c0      	blx	r8
 8000c10:	3001      	adds	r0, #1
 8000c12:	d103      	bne.n	8000c1c <_printf_common+0xac>
 8000c14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c1c:	3501      	adds	r5, #1
 8000c1e:	e7c6      	b.n	8000bae <_printf_common+0x3e>
 8000c20:	18e1      	adds	r1, r4, r3
 8000c22:	1c5a      	adds	r2, r3, #1
 8000c24:	2030      	movs	r0, #48	; 0x30
 8000c26:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c2a:	4422      	add	r2, r4
 8000c2c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c30:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c34:	3302      	adds	r3, #2
 8000c36:	e7c7      	b.n	8000bc8 <_printf_common+0x58>
 8000c38:	2301      	movs	r3, #1
 8000c3a:	4622      	mov	r2, r4
 8000c3c:	4649      	mov	r1, r9
 8000c3e:	4638      	mov	r0, r7
 8000c40:	47c0      	blx	r8
 8000c42:	3001      	adds	r0, #1
 8000c44:	d0e6      	beq.n	8000c14 <_printf_common+0xa4>
 8000c46:	3601      	adds	r6, #1
 8000c48:	e7d9      	b.n	8000bfe <_printf_common+0x8e>
	...

08000c4c <_printf_i>:
 8000c4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c50:	7e0f      	ldrb	r7, [r1, #24]
 8000c52:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c54:	2f78      	cmp	r7, #120	; 0x78
 8000c56:	4691      	mov	r9, r2
 8000c58:	4680      	mov	r8, r0
 8000c5a:	460c      	mov	r4, r1
 8000c5c:	469a      	mov	sl, r3
 8000c5e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c62:	d807      	bhi.n	8000c74 <_printf_i+0x28>
 8000c64:	2f62      	cmp	r7, #98	; 0x62
 8000c66:	d80a      	bhi.n	8000c7e <_printf_i+0x32>
 8000c68:	2f00      	cmp	r7, #0
 8000c6a:	f000 80d4 	beq.w	8000e16 <_printf_i+0x1ca>
 8000c6e:	2f58      	cmp	r7, #88	; 0x58
 8000c70:	f000 80c0 	beq.w	8000df4 <_printf_i+0x1a8>
 8000c74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c78:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c7c:	e03a      	b.n	8000cf4 <_printf_i+0xa8>
 8000c7e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c82:	2b15      	cmp	r3, #21
 8000c84:	d8f6      	bhi.n	8000c74 <_printf_i+0x28>
 8000c86:	a101      	add	r1, pc, #4	; (adr r1, 8000c8c <_printf_i+0x40>)
 8000c88:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c8c:	08000ce5 	.word	0x08000ce5
 8000c90:	08000cf9 	.word	0x08000cf9
 8000c94:	08000c75 	.word	0x08000c75
 8000c98:	08000c75 	.word	0x08000c75
 8000c9c:	08000c75 	.word	0x08000c75
 8000ca0:	08000c75 	.word	0x08000c75
 8000ca4:	08000cf9 	.word	0x08000cf9
 8000ca8:	08000c75 	.word	0x08000c75
 8000cac:	08000c75 	.word	0x08000c75
 8000cb0:	08000c75 	.word	0x08000c75
 8000cb4:	08000c75 	.word	0x08000c75
 8000cb8:	08000dfd 	.word	0x08000dfd
 8000cbc:	08000d25 	.word	0x08000d25
 8000cc0:	08000db7 	.word	0x08000db7
 8000cc4:	08000c75 	.word	0x08000c75
 8000cc8:	08000c75 	.word	0x08000c75
 8000ccc:	08000e1f 	.word	0x08000e1f
 8000cd0:	08000c75 	.word	0x08000c75
 8000cd4:	08000d25 	.word	0x08000d25
 8000cd8:	08000c75 	.word	0x08000c75
 8000cdc:	08000c75 	.word	0x08000c75
 8000ce0:	08000dbf 	.word	0x08000dbf
 8000ce4:	682b      	ldr	r3, [r5, #0]
 8000ce6:	1d1a      	adds	r2, r3, #4
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	602a      	str	r2, [r5, #0]
 8000cec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cf0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000cf4:	2301      	movs	r3, #1
 8000cf6:	e09f      	b.n	8000e38 <_printf_i+0x1ec>
 8000cf8:	6820      	ldr	r0, [r4, #0]
 8000cfa:	682b      	ldr	r3, [r5, #0]
 8000cfc:	0607      	lsls	r7, r0, #24
 8000cfe:	f103 0104 	add.w	r1, r3, #4
 8000d02:	6029      	str	r1, [r5, #0]
 8000d04:	d501      	bpl.n	8000d0a <_printf_i+0xbe>
 8000d06:	681e      	ldr	r6, [r3, #0]
 8000d08:	e003      	b.n	8000d12 <_printf_i+0xc6>
 8000d0a:	0646      	lsls	r6, r0, #25
 8000d0c:	d5fb      	bpl.n	8000d06 <_printf_i+0xba>
 8000d0e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d12:	2e00      	cmp	r6, #0
 8000d14:	da03      	bge.n	8000d1e <_printf_i+0xd2>
 8000d16:	232d      	movs	r3, #45	; 0x2d
 8000d18:	4276      	negs	r6, r6
 8000d1a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d1e:	485a      	ldr	r0, [pc, #360]	; (8000e88 <_printf_i+0x23c>)
 8000d20:	230a      	movs	r3, #10
 8000d22:	e012      	b.n	8000d4a <_printf_i+0xfe>
 8000d24:	682b      	ldr	r3, [r5, #0]
 8000d26:	6820      	ldr	r0, [r4, #0]
 8000d28:	1d19      	adds	r1, r3, #4
 8000d2a:	6029      	str	r1, [r5, #0]
 8000d2c:	0605      	lsls	r5, r0, #24
 8000d2e:	d501      	bpl.n	8000d34 <_printf_i+0xe8>
 8000d30:	681e      	ldr	r6, [r3, #0]
 8000d32:	e002      	b.n	8000d3a <_printf_i+0xee>
 8000d34:	0641      	lsls	r1, r0, #25
 8000d36:	d5fb      	bpl.n	8000d30 <_printf_i+0xe4>
 8000d38:	881e      	ldrh	r6, [r3, #0]
 8000d3a:	4853      	ldr	r0, [pc, #332]	; (8000e88 <_printf_i+0x23c>)
 8000d3c:	2f6f      	cmp	r7, #111	; 0x6f
 8000d3e:	bf0c      	ite	eq
 8000d40:	2308      	moveq	r3, #8
 8000d42:	230a      	movne	r3, #10
 8000d44:	2100      	movs	r1, #0
 8000d46:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d4a:	6865      	ldr	r5, [r4, #4]
 8000d4c:	60a5      	str	r5, [r4, #8]
 8000d4e:	2d00      	cmp	r5, #0
 8000d50:	bfa2      	ittt	ge
 8000d52:	6821      	ldrge	r1, [r4, #0]
 8000d54:	f021 0104 	bicge.w	r1, r1, #4
 8000d58:	6021      	strge	r1, [r4, #0]
 8000d5a:	b90e      	cbnz	r6, 8000d60 <_printf_i+0x114>
 8000d5c:	2d00      	cmp	r5, #0
 8000d5e:	d04b      	beq.n	8000df8 <_printf_i+0x1ac>
 8000d60:	4615      	mov	r5, r2
 8000d62:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d66:	fb03 6711 	mls	r7, r3, r1, r6
 8000d6a:	5dc7      	ldrb	r7, [r0, r7]
 8000d6c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d70:	4637      	mov	r7, r6
 8000d72:	42bb      	cmp	r3, r7
 8000d74:	460e      	mov	r6, r1
 8000d76:	d9f4      	bls.n	8000d62 <_printf_i+0x116>
 8000d78:	2b08      	cmp	r3, #8
 8000d7a:	d10b      	bne.n	8000d94 <_printf_i+0x148>
 8000d7c:	6823      	ldr	r3, [r4, #0]
 8000d7e:	07de      	lsls	r6, r3, #31
 8000d80:	d508      	bpl.n	8000d94 <_printf_i+0x148>
 8000d82:	6923      	ldr	r3, [r4, #16]
 8000d84:	6861      	ldr	r1, [r4, #4]
 8000d86:	4299      	cmp	r1, r3
 8000d88:	bfde      	ittt	le
 8000d8a:	2330      	movle	r3, #48	; 0x30
 8000d8c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d90:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000d94:	1b52      	subs	r2, r2, r5
 8000d96:	6122      	str	r2, [r4, #16]
 8000d98:	f8cd a000 	str.w	sl, [sp]
 8000d9c:	464b      	mov	r3, r9
 8000d9e:	aa03      	add	r2, sp, #12
 8000da0:	4621      	mov	r1, r4
 8000da2:	4640      	mov	r0, r8
 8000da4:	f7ff fee4 	bl	8000b70 <_printf_common>
 8000da8:	3001      	adds	r0, #1
 8000daa:	d14a      	bne.n	8000e42 <_printf_i+0x1f6>
 8000dac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000db0:	b004      	add	sp, #16
 8000db2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000db6:	6823      	ldr	r3, [r4, #0]
 8000db8:	f043 0320 	orr.w	r3, r3, #32
 8000dbc:	6023      	str	r3, [r4, #0]
 8000dbe:	4833      	ldr	r0, [pc, #204]	; (8000e8c <_printf_i+0x240>)
 8000dc0:	2778      	movs	r7, #120	; 0x78
 8000dc2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000dc6:	6823      	ldr	r3, [r4, #0]
 8000dc8:	6829      	ldr	r1, [r5, #0]
 8000dca:	061f      	lsls	r7, r3, #24
 8000dcc:	f851 6b04 	ldr.w	r6, [r1], #4
 8000dd0:	d402      	bmi.n	8000dd8 <_printf_i+0x18c>
 8000dd2:	065f      	lsls	r7, r3, #25
 8000dd4:	bf48      	it	mi
 8000dd6:	b2b6      	uxthmi	r6, r6
 8000dd8:	07df      	lsls	r7, r3, #31
 8000dda:	bf48      	it	mi
 8000ddc:	f043 0320 	orrmi.w	r3, r3, #32
 8000de0:	6029      	str	r1, [r5, #0]
 8000de2:	bf48      	it	mi
 8000de4:	6023      	strmi	r3, [r4, #0]
 8000de6:	b91e      	cbnz	r6, 8000df0 <_printf_i+0x1a4>
 8000de8:	6823      	ldr	r3, [r4, #0]
 8000dea:	f023 0320 	bic.w	r3, r3, #32
 8000dee:	6023      	str	r3, [r4, #0]
 8000df0:	2310      	movs	r3, #16
 8000df2:	e7a7      	b.n	8000d44 <_printf_i+0xf8>
 8000df4:	4824      	ldr	r0, [pc, #144]	; (8000e88 <_printf_i+0x23c>)
 8000df6:	e7e4      	b.n	8000dc2 <_printf_i+0x176>
 8000df8:	4615      	mov	r5, r2
 8000dfa:	e7bd      	b.n	8000d78 <_printf_i+0x12c>
 8000dfc:	682b      	ldr	r3, [r5, #0]
 8000dfe:	6826      	ldr	r6, [r4, #0]
 8000e00:	6961      	ldr	r1, [r4, #20]
 8000e02:	1d18      	adds	r0, r3, #4
 8000e04:	6028      	str	r0, [r5, #0]
 8000e06:	0635      	lsls	r5, r6, #24
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	d501      	bpl.n	8000e10 <_printf_i+0x1c4>
 8000e0c:	6019      	str	r1, [r3, #0]
 8000e0e:	e002      	b.n	8000e16 <_printf_i+0x1ca>
 8000e10:	0670      	lsls	r0, r6, #25
 8000e12:	d5fb      	bpl.n	8000e0c <_printf_i+0x1c0>
 8000e14:	8019      	strh	r1, [r3, #0]
 8000e16:	2300      	movs	r3, #0
 8000e18:	6123      	str	r3, [r4, #16]
 8000e1a:	4615      	mov	r5, r2
 8000e1c:	e7bc      	b.n	8000d98 <_printf_i+0x14c>
 8000e1e:	682b      	ldr	r3, [r5, #0]
 8000e20:	1d1a      	adds	r2, r3, #4
 8000e22:	602a      	str	r2, [r5, #0]
 8000e24:	681d      	ldr	r5, [r3, #0]
 8000e26:	6862      	ldr	r2, [r4, #4]
 8000e28:	2100      	movs	r1, #0
 8000e2a:	4628      	mov	r0, r5
 8000e2c:	f7ff fa08 	bl	8000240 <memchr>
 8000e30:	b108      	cbz	r0, 8000e36 <_printf_i+0x1ea>
 8000e32:	1b40      	subs	r0, r0, r5
 8000e34:	6060      	str	r0, [r4, #4]
 8000e36:	6863      	ldr	r3, [r4, #4]
 8000e38:	6123      	str	r3, [r4, #16]
 8000e3a:	2300      	movs	r3, #0
 8000e3c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e40:	e7aa      	b.n	8000d98 <_printf_i+0x14c>
 8000e42:	6923      	ldr	r3, [r4, #16]
 8000e44:	462a      	mov	r2, r5
 8000e46:	4649      	mov	r1, r9
 8000e48:	4640      	mov	r0, r8
 8000e4a:	47d0      	blx	sl
 8000e4c:	3001      	adds	r0, #1
 8000e4e:	d0ad      	beq.n	8000dac <_printf_i+0x160>
 8000e50:	6823      	ldr	r3, [r4, #0]
 8000e52:	079b      	lsls	r3, r3, #30
 8000e54:	d413      	bmi.n	8000e7e <_printf_i+0x232>
 8000e56:	68e0      	ldr	r0, [r4, #12]
 8000e58:	9b03      	ldr	r3, [sp, #12]
 8000e5a:	4298      	cmp	r0, r3
 8000e5c:	bfb8      	it	lt
 8000e5e:	4618      	movlt	r0, r3
 8000e60:	e7a6      	b.n	8000db0 <_printf_i+0x164>
 8000e62:	2301      	movs	r3, #1
 8000e64:	4632      	mov	r2, r6
 8000e66:	4649      	mov	r1, r9
 8000e68:	4640      	mov	r0, r8
 8000e6a:	47d0      	blx	sl
 8000e6c:	3001      	adds	r0, #1
 8000e6e:	d09d      	beq.n	8000dac <_printf_i+0x160>
 8000e70:	3501      	adds	r5, #1
 8000e72:	68e3      	ldr	r3, [r4, #12]
 8000e74:	9903      	ldr	r1, [sp, #12]
 8000e76:	1a5b      	subs	r3, r3, r1
 8000e78:	42ab      	cmp	r3, r5
 8000e7a:	dcf2      	bgt.n	8000e62 <_printf_i+0x216>
 8000e7c:	e7eb      	b.n	8000e56 <_printf_i+0x20a>
 8000e7e:	2500      	movs	r5, #0
 8000e80:	f104 0619 	add.w	r6, r4, #25
 8000e84:	e7f5      	b.n	8000e72 <_printf_i+0x226>
 8000e86:	bf00      	nop
 8000e88:	08001439 	.word	0x08001439
 8000e8c:	0800144a 	.word	0x0800144a

08000e90 <__sflush_r>:
 8000e90:	898a      	ldrh	r2, [r1, #12]
 8000e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e96:	4605      	mov	r5, r0
 8000e98:	0710      	lsls	r0, r2, #28
 8000e9a:	460c      	mov	r4, r1
 8000e9c:	d458      	bmi.n	8000f50 <__sflush_r+0xc0>
 8000e9e:	684b      	ldr	r3, [r1, #4]
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	dc05      	bgt.n	8000eb0 <__sflush_r+0x20>
 8000ea4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000ea6:	2b00      	cmp	r3, #0
 8000ea8:	dc02      	bgt.n	8000eb0 <__sflush_r+0x20>
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000eb0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000eb2:	2e00      	cmp	r6, #0
 8000eb4:	d0f9      	beq.n	8000eaa <__sflush_r+0x1a>
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000ebc:	682f      	ldr	r7, [r5, #0]
 8000ebe:	6a21      	ldr	r1, [r4, #32]
 8000ec0:	602b      	str	r3, [r5, #0]
 8000ec2:	d032      	beq.n	8000f2a <__sflush_r+0x9a>
 8000ec4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ec6:	89a3      	ldrh	r3, [r4, #12]
 8000ec8:	075a      	lsls	r2, r3, #29
 8000eca:	d505      	bpl.n	8000ed8 <__sflush_r+0x48>
 8000ecc:	6863      	ldr	r3, [r4, #4]
 8000ece:	1ac0      	subs	r0, r0, r3
 8000ed0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ed2:	b10b      	cbz	r3, 8000ed8 <__sflush_r+0x48>
 8000ed4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ed6:	1ac0      	subs	r0, r0, r3
 8000ed8:	2300      	movs	r3, #0
 8000eda:	4602      	mov	r2, r0
 8000edc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000ede:	6a21      	ldr	r1, [r4, #32]
 8000ee0:	4628      	mov	r0, r5
 8000ee2:	47b0      	blx	r6
 8000ee4:	1c43      	adds	r3, r0, #1
 8000ee6:	89a3      	ldrh	r3, [r4, #12]
 8000ee8:	d106      	bne.n	8000ef8 <__sflush_r+0x68>
 8000eea:	6829      	ldr	r1, [r5, #0]
 8000eec:	291d      	cmp	r1, #29
 8000eee:	d82b      	bhi.n	8000f48 <__sflush_r+0xb8>
 8000ef0:	4a29      	ldr	r2, [pc, #164]	; (8000f98 <__sflush_r+0x108>)
 8000ef2:	410a      	asrs	r2, r1
 8000ef4:	07d6      	lsls	r6, r2, #31
 8000ef6:	d427      	bmi.n	8000f48 <__sflush_r+0xb8>
 8000ef8:	2200      	movs	r2, #0
 8000efa:	6062      	str	r2, [r4, #4]
 8000efc:	04d9      	lsls	r1, r3, #19
 8000efe:	6922      	ldr	r2, [r4, #16]
 8000f00:	6022      	str	r2, [r4, #0]
 8000f02:	d504      	bpl.n	8000f0e <__sflush_r+0x7e>
 8000f04:	1c42      	adds	r2, r0, #1
 8000f06:	d101      	bne.n	8000f0c <__sflush_r+0x7c>
 8000f08:	682b      	ldr	r3, [r5, #0]
 8000f0a:	b903      	cbnz	r3, 8000f0e <__sflush_r+0x7e>
 8000f0c:	6560      	str	r0, [r4, #84]	; 0x54
 8000f0e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f10:	602f      	str	r7, [r5, #0]
 8000f12:	2900      	cmp	r1, #0
 8000f14:	d0c9      	beq.n	8000eaa <__sflush_r+0x1a>
 8000f16:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f1a:	4299      	cmp	r1, r3
 8000f1c:	d002      	beq.n	8000f24 <__sflush_r+0x94>
 8000f1e:	4628      	mov	r0, r5
 8000f20:	f000 fa22 	bl	8001368 <_free_r>
 8000f24:	2000      	movs	r0, #0
 8000f26:	6360      	str	r0, [r4, #52]	; 0x34
 8000f28:	e7c0      	b.n	8000eac <__sflush_r+0x1c>
 8000f2a:	2301      	movs	r3, #1
 8000f2c:	4628      	mov	r0, r5
 8000f2e:	47b0      	blx	r6
 8000f30:	1c41      	adds	r1, r0, #1
 8000f32:	d1c8      	bne.n	8000ec6 <__sflush_r+0x36>
 8000f34:	682b      	ldr	r3, [r5, #0]
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d0c5      	beq.n	8000ec6 <__sflush_r+0x36>
 8000f3a:	2b1d      	cmp	r3, #29
 8000f3c:	d001      	beq.n	8000f42 <__sflush_r+0xb2>
 8000f3e:	2b16      	cmp	r3, #22
 8000f40:	d101      	bne.n	8000f46 <__sflush_r+0xb6>
 8000f42:	602f      	str	r7, [r5, #0]
 8000f44:	e7b1      	b.n	8000eaa <__sflush_r+0x1a>
 8000f46:	89a3      	ldrh	r3, [r4, #12]
 8000f48:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f4c:	81a3      	strh	r3, [r4, #12]
 8000f4e:	e7ad      	b.n	8000eac <__sflush_r+0x1c>
 8000f50:	690f      	ldr	r7, [r1, #16]
 8000f52:	2f00      	cmp	r7, #0
 8000f54:	d0a9      	beq.n	8000eaa <__sflush_r+0x1a>
 8000f56:	0793      	lsls	r3, r2, #30
 8000f58:	680e      	ldr	r6, [r1, #0]
 8000f5a:	bf08      	it	eq
 8000f5c:	694b      	ldreq	r3, [r1, #20]
 8000f5e:	600f      	str	r7, [r1, #0]
 8000f60:	bf18      	it	ne
 8000f62:	2300      	movne	r3, #0
 8000f64:	eba6 0807 	sub.w	r8, r6, r7
 8000f68:	608b      	str	r3, [r1, #8]
 8000f6a:	f1b8 0f00 	cmp.w	r8, #0
 8000f6e:	dd9c      	ble.n	8000eaa <__sflush_r+0x1a>
 8000f70:	6a21      	ldr	r1, [r4, #32]
 8000f72:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f74:	4643      	mov	r3, r8
 8000f76:	463a      	mov	r2, r7
 8000f78:	4628      	mov	r0, r5
 8000f7a:	47b0      	blx	r6
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	dc06      	bgt.n	8000f8e <__sflush_r+0xfe>
 8000f80:	89a3      	ldrh	r3, [r4, #12]
 8000f82:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f86:	81a3      	strh	r3, [r4, #12]
 8000f88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f8c:	e78e      	b.n	8000eac <__sflush_r+0x1c>
 8000f8e:	4407      	add	r7, r0
 8000f90:	eba8 0800 	sub.w	r8, r8, r0
 8000f94:	e7e9      	b.n	8000f6a <__sflush_r+0xda>
 8000f96:	bf00      	nop
 8000f98:	dfbffffe 	.word	0xdfbffffe

08000f9c <_fflush_r>:
 8000f9c:	b538      	push	{r3, r4, r5, lr}
 8000f9e:	690b      	ldr	r3, [r1, #16]
 8000fa0:	4605      	mov	r5, r0
 8000fa2:	460c      	mov	r4, r1
 8000fa4:	b913      	cbnz	r3, 8000fac <_fflush_r+0x10>
 8000fa6:	2500      	movs	r5, #0
 8000fa8:	4628      	mov	r0, r5
 8000faa:	bd38      	pop	{r3, r4, r5, pc}
 8000fac:	b118      	cbz	r0, 8000fb6 <_fflush_r+0x1a>
 8000fae:	6a03      	ldr	r3, [r0, #32]
 8000fb0:	b90b      	cbnz	r3, 8000fb6 <_fflush_r+0x1a>
 8000fb2:	f7ff fb7d 	bl	80006b0 <__sinit>
 8000fb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	d0f3      	beq.n	8000fa6 <_fflush_r+0xa>
 8000fbe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fc0:	07d0      	lsls	r0, r2, #31
 8000fc2:	d404      	bmi.n	8000fce <_fflush_r+0x32>
 8000fc4:	0599      	lsls	r1, r3, #22
 8000fc6:	d402      	bmi.n	8000fce <_fflush_r+0x32>
 8000fc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fca:	f7ff fbec 	bl	80007a6 <__retarget_lock_acquire_recursive>
 8000fce:	4628      	mov	r0, r5
 8000fd0:	4621      	mov	r1, r4
 8000fd2:	f7ff ff5d 	bl	8000e90 <__sflush_r>
 8000fd6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000fd8:	07da      	lsls	r2, r3, #31
 8000fda:	4605      	mov	r5, r0
 8000fdc:	d4e4      	bmi.n	8000fa8 <_fflush_r+0xc>
 8000fde:	89a3      	ldrh	r3, [r4, #12]
 8000fe0:	059b      	lsls	r3, r3, #22
 8000fe2:	d4e1      	bmi.n	8000fa8 <_fflush_r+0xc>
 8000fe4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fe6:	f7ff fbdf 	bl	80007a8 <__retarget_lock_release_recursive>
 8000fea:	e7dd      	b.n	8000fa8 <_fflush_r+0xc>

08000fec <__malloc_lock>:
 8000fec:	4801      	ldr	r0, [pc, #4]	; (8000ff4 <__malloc_lock+0x8>)
 8000fee:	f7ff bbda 	b.w	80007a6 <__retarget_lock_acquire_recursive>
 8000ff2:	bf00      	nop
 8000ff4:	200001b8 	.word	0x200001b8

08000ff8 <__malloc_unlock>:
 8000ff8:	4801      	ldr	r0, [pc, #4]	; (8001000 <__malloc_unlock+0x8>)
 8000ffa:	f7ff bbd5 	b.w	80007a8 <__retarget_lock_release_recursive>
 8000ffe:	bf00      	nop
 8001000:	200001b8 	.word	0x200001b8

08001004 <__sread>:
 8001004:	b510      	push	{r4, lr}
 8001006:	460c      	mov	r4, r1
 8001008:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800100c:	f000 f978 	bl	8001300 <_read_r>
 8001010:	2800      	cmp	r0, #0
 8001012:	bfab      	itete	ge
 8001014:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001016:	89a3      	ldrhlt	r3, [r4, #12]
 8001018:	181b      	addge	r3, r3, r0
 800101a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800101e:	bfac      	ite	ge
 8001020:	6563      	strge	r3, [r4, #84]	; 0x54
 8001022:	81a3      	strhlt	r3, [r4, #12]
 8001024:	bd10      	pop	{r4, pc}

08001026 <__swrite>:
 8001026:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800102a:	461f      	mov	r7, r3
 800102c:	898b      	ldrh	r3, [r1, #12]
 800102e:	05db      	lsls	r3, r3, #23
 8001030:	4605      	mov	r5, r0
 8001032:	460c      	mov	r4, r1
 8001034:	4616      	mov	r6, r2
 8001036:	d505      	bpl.n	8001044 <__swrite+0x1e>
 8001038:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800103c:	2302      	movs	r3, #2
 800103e:	2200      	movs	r2, #0
 8001040:	f000 f94c 	bl	80012dc <_lseek_r>
 8001044:	89a3      	ldrh	r3, [r4, #12]
 8001046:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800104a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800104e:	81a3      	strh	r3, [r4, #12]
 8001050:	4632      	mov	r2, r6
 8001052:	463b      	mov	r3, r7
 8001054:	4628      	mov	r0, r5
 8001056:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800105a:	f000 b973 	b.w	8001344 <_write_r>

0800105e <__sseek>:
 800105e:	b510      	push	{r4, lr}
 8001060:	460c      	mov	r4, r1
 8001062:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001066:	f000 f939 	bl	80012dc <_lseek_r>
 800106a:	1c43      	adds	r3, r0, #1
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	bf15      	itete	ne
 8001070:	6560      	strne	r0, [r4, #84]	; 0x54
 8001072:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001076:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800107a:	81a3      	strheq	r3, [r4, #12]
 800107c:	bf18      	it	ne
 800107e:	81a3      	strhne	r3, [r4, #12]
 8001080:	bd10      	pop	{r4, pc}

08001082 <__sclose>:
 8001082:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001086:	f000 b8f7 	b.w	8001278 <_close_r>

0800108a <__swbuf_r>:
 800108a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800108c:	460e      	mov	r6, r1
 800108e:	4614      	mov	r4, r2
 8001090:	4605      	mov	r5, r0
 8001092:	b118      	cbz	r0, 800109c <__swbuf_r+0x12>
 8001094:	6a03      	ldr	r3, [r0, #32]
 8001096:	b90b      	cbnz	r3, 800109c <__swbuf_r+0x12>
 8001098:	f7ff fb0a 	bl	80006b0 <__sinit>
 800109c:	69a3      	ldr	r3, [r4, #24]
 800109e:	60a3      	str	r3, [r4, #8]
 80010a0:	89a3      	ldrh	r3, [r4, #12]
 80010a2:	071a      	lsls	r2, r3, #28
 80010a4:	d525      	bpl.n	80010f2 <__swbuf_r+0x68>
 80010a6:	6923      	ldr	r3, [r4, #16]
 80010a8:	b31b      	cbz	r3, 80010f2 <__swbuf_r+0x68>
 80010aa:	6823      	ldr	r3, [r4, #0]
 80010ac:	6922      	ldr	r2, [r4, #16]
 80010ae:	1a98      	subs	r0, r3, r2
 80010b0:	6963      	ldr	r3, [r4, #20]
 80010b2:	b2f6      	uxtb	r6, r6
 80010b4:	4283      	cmp	r3, r0
 80010b6:	4637      	mov	r7, r6
 80010b8:	dc04      	bgt.n	80010c4 <__swbuf_r+0x3a>
 80010ba:	4621      	mov	r1, r4
 80010bc:	4628      	mov	r0, r5
 80010be:	f7ff ff6d 	bl	8000f9c <_fflush_r>
 80010c2:	b9e0      	cbnz	r0, 80010fe <__swbuf_r+0x74>
 80010c4:	68a3      	ldr	r3, [r4, #8]
 80010c6:	3b01      	subs	r3, #1
 80010c8:	60a3      	str	r3, [r4, #8]
 80010ca:	6823      	ldr	r3, [r4, #0]
 80010cc:	1c5a      	adds	r2, r3, #1
 80010ce:	6022      	str	r2, [r4, #0]
 80010d0:	701e      	strb	r6, [r3, #0]
 80010d2:	6962      	ldr	r2, [r4, #20]
 80010d4:	1c43      	adds	r3, r0, #1
 80010d6:	429a      	cmp	r2, r3
 80010d8:	d004      	beq.n	80010e4 <__swbuf_r+0x5a>
 80010da:	89a3      	ldrh	r3, [r4, #12]
 80010dc:	07db      	lsls	r3, r3, #31
 80010de:	d506      	bpl.n	80010ee <__swbuf_r+0x64>
 80010e0:	2e0a      	cmp	r6, #10
 80010e2:	d104      	bne.n	80010ee <__swbuf_r+0x64>
 80010e4:	4621      	mov	r1, r4
 80010e6:	4628      	mov	r0, r5
 80010e8:	f7ff ff58 	bl	8000f9c <_fflush_r>
 80010ec:	b938      	cbnz	r0, 80010fe <__swbuf_r+0x74>
 80010ee:	4638      	mov	r0, r7
 80010f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010f2:	4621      	mov	r1, r4
 80010f4:	4628      	mov	r0, r5
 80010f6:	f000 f805 	bl	8001104 <__swsetup_r>
 80010fa:	2800      	cmp	r0, #0
 80010fc:	d0d5      	beq.n	80010aa <__swbuf_r+0x20>
 80010fe:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001102:	e7f4      	b.n	80010ee <__swbuf_r+0x64>

08001104 <__swsetup_r>:
 8001104:	b538      	push	{r3, r4, r5, lr}
 8001106:	4b2a      	ldr	r3, [pc, #168]	; (80011b0 <__swsetup_r+0xac>)
 8001108:	4605      	mov	r5, r0
 800110a:	6818      	ldr	r0, [r3, #0]
 800110c:	460c      	mov	r4, r1
 800110e:	b118      	cbz	r0, 8001118 <__swsetup_r+0x14>
 8001110:	6a03      	ldr	r3, [r0, #32]
 8001112:	b90b      	cbnz	r3, 8001118 <__swsetup_r+0x14>
 8001114:	f7ff facc 	bl	80006b0 <__sinit>
 8001118:	89a3      	ldrh	r3, [r4, #12]
 800111a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800111e:	0718      	lsls	r0, r3, #28
 8001120:	d422      	bmi.n	8001168 <__swsetup_r+0x64>
 8001122:	06d9      	lsls	r1, r3, #27
 8001124:	d407      	bmi.n	8001136 <__swsetup_r+0x32>
 8001126:	2309      	movs	r3, #9
 8001128:	602b      	str	r3, [r5, #0]
 800112a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800112e:	81a3      	strh	r3, [r4, #12]
 8001130:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001134:	e034      	b.n	80011a0 <__swsetup_r+0x9c>
 8001136:	0758      	lsls	r0, r3, #29
 8001138:	d512      	bpl.n	8001160 <__swsetup_r+0x5c>
 800113a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800113c:	b141      	cbz	r1, 8001150 <__swsetup_r+0x4c>
 800113e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001142:	4299      	cmp	r1, r3
 8001144:	d002      	beq.n	800114c <__swsetup_r+0x48>
 8001146:	4628      	mov	r0, r5
 8001148:	f000 f90e 	bl	8001368 <_free_r>
 800114c:	2300      	movs	r3, #0
 800114e:	6363      	str	r3, [r4, #52]	; 0x34
 8001150:	89a3      	ldrh	r3, [r4, #12]
 8001152:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001156:	81a3      	strh	r3, [r4, #12]
 8001158:	2300      	movs	r3, #0
 800115a:	6063      	str	r3, [r4, #4]
 800115c:	6923      	ldr	r3, [r4, #16]
 800115e:	6023      	str	r3, [r4, #0]
 8001160:	89a3      	ldrh	r3, [r4, #12]
 8001162:	f043 0308 	orr.w	r3, r3, #8
 8001166:	81a3      	strh	r3, [r4, #12]
 8001168:	6923      	ldr	r3, [r4, #16]
 800116a:	b94b      	cbnz	r3, 8001180 <__swsetup_r+0x7c>
 800116c:	89a3      	ldrh	r3, [r4, #12]
 800116e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001172:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001176:	d003      	beq.n	8001180 <__swsetup_r+0x7c>
 8001178:	4621      	mov	r1, r4
 800117a:	4628      	mov	r0, r5
 800117c:	f000 f840 	bl	8001200 <__smakebuf_r>
 8001180:	89a0      	ldrh	r0, [r4, #12]
 8001182:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001186:	f010 0301 	ands.w	r3, r0, #1
 800118a:	d00a      	beq.n	80011a2 <__swsetup_r+0x9e>
 800118c:	2300      	movs	r3, #0
 800118e:	60a3      	str	r3, [r4, #8]
 8001190:	6963      	ldr	r3, [r4, #20]
 8001192:	425b      	negs	r3, r3
 8001194:	61a3      	str	r3, [r4, #24]
 8001196:	6923      	ldr	r3, [r4, #16]
 8001198:	b943      	cbnz	r3, 80011ac <__swsetup_r+0xa8>
 800119a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800119e:	d1c4      	bne.n	800112a <__swsetup_r+0x26>
 80011a0:	bd38      	pop	{r3, r4, r5, pc}
 80011a2:	0781      	lsls	r1, r0, #30
 80011a4:	bf58      	it	pl
 80011a6:	6963      	ldrpl	r3, [r4, #20]
 80011a8:	60a3      	str	r3, [r4, #8]
 80011aa:	e7f4      	b.n	8001196 <__swsetup_r+0x92>
 80011ac:	2000      	movs	r0, #0
 80011ae:	e7f7      	b.n	80011a0 <__swsetup_r+0x9c>
 80011b0:	20000058 	.word	0x20000058

080011b4 <__swhatbuf_r>:
 80011b4:	b570      	push	{r4, r5, r6, lr}
 80011b6:	460c      	mov	r4, r1
 80011b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011bc:	2900      	cmp	r1, #0
 80011be:	b096      	sub	sp, #88	; 0x58
 80011c0:	4615      	mov	r5, r2
 80011c2:	461e      	mov	r6, r3
 80011c4:	da0d      	bge.n	80011e2 <__swhatbuf_r+0x2e>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011cc:	f04f 0100 	mov.w	r1, #0
 80011d0:	bf0c      	ite	eq
 80011d2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011d6:	2340      	movne	r3, #64	; 0x40
 80011d8:	2000      	movs	r0, #0
 80011da:	6031      	str	r1, [r6, #0]
 80011dc:	602b      	str	r3, [r5, #0]
 80011de:	b016      	add	sp, #88	; 0x58
 80011e0:	bd70      	pop	{r4, r5, r6, pc}
 80011e2:	466a      	mov	r2, sp
 80011e4:	f000 f858 	bl	8001298 <_fstat_r>
 80011e8:	2800      	cmp	r0, #0
 80011ea:	dbec      	blt.n	80011c6 <__swhatbuf_r+0x12>
 80011ec:	9901      	ldr	r1, [sp, #4]
 80011ee:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80011f2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80011f6:	4259      	negs	r1, r3
 80011f8:	4159      	adcs	r1, r3
 80011fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011fe:	e7eb      	b.n	80011d8 <__swhatbuf_r+0x24>

08001200 <__smakebuf_r>:
 8001200:	898b      	ldrh	r3, [r1, #12]
 8001202:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001204:	079d      	lsls	r5, r3, #30
 8001206:	4606      	mov	r6, r0
 8001208:	460c      	mov	r4, r1
 800120a:	d507      	bpl.n	800121c <__smakebuf_r+0x1c>
 800120c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001210:	6023      	str	r3, [r4, #0]
 8001212:	6123      	str	r3, [r4, #16]
 8001214:	2301      	movs	r3, #1
 8001216:	6163      	str	r3, [r4, #20]
 8001218:	b002      	add	sp, #8
 800121a:	bd70      	pop	{r4, r5, r6, pc}
 800121c:	ab01      	add	r3, sp, #4
 800121e:	466a      	mov	r2, sp
 8001220:	f7ff ffc8 	bl	80011b4 <__swhatbuf_r>
 8001224:	9900      	ldr	r1, [sp, #0]
 8001226:	4605      	mov	r5, r0
 8001228:	4630      	mov	r0, r6
 800122a:	f7ff fc21 	bl	8000a70 <_malloc_r>
 800122e:	b948      	cbnz	r0, 8001244 <__smakebuf_r+0x44>
 8001230:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001234:	059a      	lsls	r2, r3, #22
 8001236:	d4ef      	bmi.n	8001218 <__smakebuf_r+0x18>
 8001238:	f023 0303 	bic.w	r3, r3, #3
 800123c:	f043 0302 	orr.w	r3, r3, #2
 8001240:	81a3      	strh	r3, [r4, #12]
 8001242:	e7e3      	b.n	800120c <__smakebuf_r+0xc>
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	6020      	str	r0, [r4, #0]
 8001248:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800124c:	81a3      	strh	r3, [r4, #12]
 800124e:	9b00      	ldr	r3, [sp, #0]
 8001250:	6163      	str	r3, [r4, #20]
 8001252:	9b01      	ldr	r3, [sp, #4]
 8001254:	6120      	str	r0, [r4, #16]
 8001256:	b15b      	cbz	r3, 8001270 <__smakebuf_r+0x70>
 8001258:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800125c:	4630      	mov	r0, r6
 800125e:	f000 f82d 	bl	80012bc <_isatty_r>
 8001262:	b128      	cbz	r0, 8001270 <__smakebuf_r+0x70>
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	f023 0303 	bic.w	r3, r3, #3
 800126a:	f043 0301 	orr.w	r3, r3, #1
 800126e:	81a3      	strh	r3, [r4, #12]
 8001270:	89a3      	ldrh	r3, [r4, #12]
 8001272:	431d      	orrs	r5, r3
 8001274:	81a5      	strh	r5, [r4, #12]
 8001276:	e7cf      	b.n	8001218 <__smakebuf_r+0x18>

08001278 <_close_r>:
 8001278:	b538      	push	{r3, r4, r5, lr}
 800127a:	4d06      	ldr	r5, [pc, #24]	; (8001294 <_close_r+0x1c>)
 800127c:	2300      	movs	r3, #0
 800127e:	4604      	mov	r4, r0
 8001280:	4608      	mov	r0, r1
 8001282:	602b      	str	r3, [r5, #0]
 8001284:	f7ff f883 	bl	800038e <_close>
 8001288:	1c43      	adds	r3, r0, #1
 800128a:	d102      	bne.n	8001292 <_close_r+0x1a>
 800128c:	682b      	ldr	r3, [r5, #0]
 800128e:	b103      	cbz	r3, 8001292 <_close_r+0x1a>
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	200001c4 	.word	0x200001c4

08001298 <_fstat_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d07      	ldr	r5, [pc, #28]	; (80012b8 <_fstat_r+0x20>)
 800129c:	2300      	movs	r3, #0
 800129e:	4604      	mov	r4, r0
 80012a0:	4608      	mov	r0, r1
 80012a2:	4611      	mov	r1, r2
 80012a4:	602b      	str	r3, [r5, #0]
 80012a6:	f7ff f87e 	bl	80003a6 <_fstat>
 80012aa:	1c43      	adds	r3, r0, #1
 80012ac:	d102      	bne.n	80012b4 <_fstat_r+0x1c>
 80012ae:	682b      	ldr	r3, [r5, #0]
 80012b0:	b103      	cbz	r3, 80012b4 <_fstat_r+0x1c>
 80012b2:	6023      	str	r3, [r4, #0]
 80012b4:	bd38      	pop	{r3, r4, r5, pc}
 80012b6:	bf00      	nop
 80012b8:	200001c4 	.word	0x200001c4

080012bc <_isatty_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	4d06      	ldr	r5, [pc, #24]	; (80012d8 <_isatty_r+0x1c>)
 80012c0:	2300      	movs	r3, #0
 80012c2:	4604      	mov	r4, r0
 80012c4:	4608      	mov	r0, r1
 80012c6:	602b      	str	r3, [r5, #0]
 80012c8:	f7ff f87d 	bl	80003c6 <_isatty>
 80012cc:	1c43      	adds	r3, r0, #1
 80012ce:	d102      	bne.n	80012d6 <_isatty_r+0x1a>
 80012d0:	682b      	ldr	r3, [r5, #0]
 80012d2:	b103      	cbz	r3, 80012d6 <_isatty_r+0x1a>
 80012d4:	6023      	str	r3, [r4, #0]
 80012d6:	bd38      	pop	{r3, r4, r5, pc}
 80012d8:	200001c4 	.word	0x200001c4

080012dc <_lseek_r>:
 80012dc:	b538      	push	{r3, r4, r5, lr}
 80012de:	4d07      	ldr	r5, [pc, #28]	; (80012fc <_lseek_r+0x20>)
 80012e0:	4604      	mov	r4, r0
 80012e2:	4608      	mov	r0, r1
 80012e4:	4611      	mov	r1, r2
 80012e6:	2200      	movs	r2, #0
 80012e8:	602a      	str	r2, [r5, #0]
 80012ea:	461a      	mov	r2, r3
 80012ec:	f7ff f876 	bl	80003dc <_lseek>
 80012f0:	1c43      	adds	r3, r0, #1
 80012f2:	d102      	bne.n	80012fa <_lseek_r+0x1e>
 80012f4:	682b      	ldr	r3, [r5, #0]
 80012f6:	b103      	cbz	r3, 80012fa <_lseek_r+0x1e>
 80012f8:	6023      	str	r3, [r4, #0]
 80012fa:	bd38      	pop	{r3, r4, r5, pc}
 80012fc:	200001c4 	.word	0x200001c4

08001300 <_read_r>:
 8001300:	b538      	push	{r3, r4, r5, lr}
 8001302:	4d07      	ldr	r5, [pc, #28]	; (8001320 <_read_r+0x20>)
 8001304:	4604      	mov	r4, r0
 8001306:	4608      	mov	r0, r1
 8001308:	4611      	mov	r1, r2
 800130a:	2200      	movs	r2, #0
 800130c:	602a      	str	r2, [r5, #0]
 800130e:	461a      	mov	r2, r3
 8001310:	f7ff f804 	bl	800031c <_read>
 8001314:	1c43      	adds	r3, r0, #1
 8001316:	d102      	bne.n	800131e <_read_r+0x1e>
 8001318:	682b      	ldr	r3, [r5, #0]
 800131a:	b103      	cbz	r3, 800131e <_read_r+0x1e>
 800131c:	6023      	str	r3, [r4, #0]
 800131e:	bd38      	pop	{r3, r4, r5, pc}
 8001320:	200001c4 	.word	0x200001c4

08001324 <_sbrk_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	4d06      	ldr	r5, [pc, #24]	; (8001340 <_sbrk_r+0x1c>)
 8001328:	2300      	movs	r3, #0
 800132a:	4604      	mov	r4, r0
 800132c:	4608      	mov	r0, r1
 800132e:	602b      	str	r3, [r5, #0]
 8001330:	f7ff f862 	bl	80003f8 <_sbrk>
 8001334:	1c43      	adds	r3, r0, #1
 8001336:	d102      	bne.n	800133e <_sbrk_r+0x1a>
 8001338:	682b      	ldr	r3, [r5, #0]
 800133a:	b103      	cbz	r3, 800133e <_sbrk_r+0x1a>
 800133c:	6023      	str	r3, [r4, #0]
 800133e:	bd38      	pop	{r3, r4, r5, pc}
 8001340:	200001c4 	.word	0x200001c4

08001344 <_write_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	4d07      	ldr	r5, [pc, #28]	; (8001364 <_write_r+0x20>)
 8001348:	4604      	mov	r4, r0
 800134a:	4608      	mov	r0, r1
 800134c:	4611      	mov	r1, r2
 800134e:	2200      	movs	r2, #0
 8001350:	602a      	str	r2, [r5, #0]
 8001352:	461a      	mov	r2, r3
 8001354:	f7fe ffff 	bl	8000356 <_write>
 8001358:	1c43      	adds	r3, r0, #1
 800135a:	d102      	bne.n	8001362 <_write_r+0x1e>
 800135c:	682b      	ldr	r3, [r5, #0]
 800135e:	b103      	cbz	r3, 8001362 <_write_r+0x1e>
 8001360:	6023      	str	r3, [r4, #0]
 8001362:	bd38      	pop	{r3, r4, r5, pc}
 8001364:	200001c4 	.word	0x200001c4

08001368 <_free_r>:
 8001368:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800136a:	2900      	cmp	r1, #0
 800136c:	d044      	beq.n	80013f8 <_free_r+0x90>
 800136e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001372:	9001      	str	r0, [sp, #4]
 8001374:	2b00      	cmp	r3, #0
 8001376:	f1a1 0404 	sub.w	r4, r1, #4
 800137a:	bfb8      	it	lt
 800137c:	18e4      	addlt	r4, r4, r3
 800137e:	f7ff fe35 	bl	8000fec <__malloc_lock>
 8001382:	4a1e      	ldr	r2, [pc, #120]	; (80013fc <_free_r+0x94>)
 8001384:	9801      	ldr	r0, [sp, #4]
 8001386:	6813      	ldr	r3, [r2, #0]
 8001388:	b933      	cbnz	r3, 8001398 <_free_r+0x30>
 800138a:	6063      	str	r3, [r4, #4]
 800138c:	6014      	str	r4, [r2, #0]
 800138e:	b003      	add	sp, #12
 8001390:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001394:	f7ff be30 	b.w	8000ff8 <__malloc_unlock>
 8001398:	42a3      	cmp	r3, r4
 800139a:	d908      	bls.n	80013ae <_free_r+0x46>
 800139c:	6825      	ldr	r5, [r4, #0]
 800139e:	1961      	adds	r1, r4, r5
 80013a0:	428b      	cmp	r3, r1
 80013a2:	bf01      	itttt	eq
 80013a4:	6819      	ldreq	r1, [r3, #0]
 80013a6:	685b      	ldreq	r3, [r3, #4]
 80013a8:	1949      	addeq	r1, r1, r5
 80013aa:	6021      	streq	r1, [r4, #0]
 80013ac:	e7ed      	b.n	800138a <_free_r+0x22>
 80013ae:	461a      	mov	r2, r3
 80013b0:	685b      	ldr	r3, [r3, #4]
 80013b2:	b10b      	cbz	r3, 80013b8 <_free_r+0x50>
 80013b4:	42a3      	cmp	r3, r4
 80013b6:	d9fa      	bls.n	80013ae <_free_r+0x46>
 80013b8:	6811      	ldr	r1, [r2, #0]
 80013ba:	1855      	adds	r5, r2, r1
 80013bc:	42a5      	cmp	r5, r4
 80013be:	d10b      	bne.n	80013d8 <_free_r+0x70>
 80013c0:	6824      	ldr	r4, [r4, #0]
 80013c2:	4421      	add	r1, r4
 80013c4:	1854      	adds	r4, r2, r1
 80013c6:	42a3      	cmp	r3, r4
 80013c8:	6011      	str	r1, [r2, #0]
 80013ca:	d1e0      	bne.n	800138e <_free_r+0x26>
 80013cc:	681c      	ldr	r4, [r3, #0]
 80013ce:	685b      	ldr	r3, [r3, #4]
 80013d0:	6053      	str	r3, [r2, #4]
 80013d2:	440c      	add	r4, r1
 80013d4:	6014      	str	r4, [r2, #0]
 80013d6:	e7da      	b.n	800138e <_free_r+0x26>
 80013d8:	d902      	bls.n	80013e0 <_free_r+0x78>
 80013da:	230c      	movs	r3, #12
 80013dc:	6003      	str	r3, [r0, #0]
 80013de:	e7d6      	b.n	800138e <_free_r+0x26>
 80013e0:	6825      	ldr	r5, [r4, #0]
 80013e2:	1961      	adds	r1, r4, r5
 80013e4:	428b      	cmp	r3, r1
 80013e6:	bf04      	itt	eq
 80013e8:	6819      	ldreq	r1, [r3, #0]
 80013ea:	685b      	ldreq	r3, [r3, #4]
 80013ec:	6063      	str	r3, [r4, #4]
 80013ee:	bf04      	itt	eq
 80013f0:	1949      	addeq	r1, r1, r5
 80013f2:	6021      	streq	r1, [r4, #0]
 80013f4:	6054      	str	r4, [r2, #4]
 80013f6:	e7ca      	b.n	800138e <_free_r+0x26>
 80013f8:	b003      	add	sp, #12
 80013fa:	bd30      	pop	{r4, r5, pc}
 80013fc:	200001bc 	.word	0x200001bc

08001400 <_init>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	bf00      	nop
 8001404:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001406:	bc08      	pop	{r3}
 8001408:	469e      	mov	lr, r3
 800140a:	4770      	bx	lr

0800140c <_fini>:
 800140c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140e:	bf00      	nop
 8001410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001412:	bc08      	pop	{r3}
 8001414:	469e      	mov	lr, r3
 8001416:	4770      	bx	lr
